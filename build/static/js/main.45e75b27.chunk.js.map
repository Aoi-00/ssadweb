{"version":3,"sources":["components/questionpage/SolutionModal.jsx","components/questionpage/QuestionList.jsx","Redux/Actions/QuestActions.jsx","assets/logo.svg","components/share/Navbar.jsx","components/share/Footer.jsx","components/questionpage/TutQuestionList.jsx","pages/Question.jsx","Redux/Actions/TwitterAction.jsx","Redux/Actions/GameActions.jsx","components/homepage/LeaderBoard.jsx","components/homepage/TwitterCard.jsx","pages/Home.jsx","components/share/GuestNavBar.jsx","Redux/Actions/AuthAction.jsx","components/loginpage/LoginForm.jsx","pages/Login.jsx","components/registerpage/RegisterForm.jsx","pages/Register.jsx","components/assignmentpage/TutorialTable.jsx","Redux/Actions/TutorialAction.jsx","components/assignmentpage/AddTutorial.jsx","pages/Assignment.jsx","pages/Logout.jsx","components/marking/StudentInfo.jsx","components/marking/MarkScoreComment.jsx","components/marking/MarkPicture.jsx","pages/Marking.jsx","pages/MarkingHome.jsx","pages/StudentSelect.jsx","components/studentmainpage/StudentSubmit.jsx","pages/StudentMain.jsx","components/share/Uploadfile.jsx","components/studentprofile/StudentProfileCard.jsx","pages/StudentProfile.jsx","components/profprofile/ProfProfileCard.jsx","pages/ProfessorProfile.jsx","pages/StudentNews.jsx","components/competepage/ClassmateList.jsx","components/competepage/StudentAssignment.jsx","pages/Compete.jsx","components/challengerpage/Competitorlist.jsx","components/challengerpage/Challengerlist.jsx","assets/challenge.jpg","pages/Challenger.jsx","components/challengerpage/CompetitorDetail.jsx","components/challengerpage/MyDetails.jsx","pages/Competitor.jsx","components/challengerpage/ChallengerDetail.jsx","pages/Challenge.jsx","components/mysubmissionpage/StudentCard.jsx","pages/MySubmission.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/TwitterReducers.jsx","Redux/Reducers/GameReducers.jsx","Redux/Reducers/TutorialReducers.jsx","Redux/Reducers/QuestReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Component","QuestionList","questions","addQuestion","striped","map","x","index","question","size","color","onClick","onAdd","questid","showTutorialQuestion","postData","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","data","type","payload","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","cx","cy","r","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","ForwardRef","Navbar","state","collapseID","username","localStorage","getItem","usertype","toggleCollapse","setState","prevState","closeCollapse","collID","window","scrollTo","componentDidMount","validateLogin","render","dark","expand","fixed","scrolling","href","className","style","height","width","isOpen","navbar","right","exact","to","nav","caret","icon","Footer","Date","getFullYear","TutQuestionList","removeQuestion","onDelete","Question","tutid","match","params","getTutorialQuestions","form","getQuestionList","showAllQuestion","NotLoggedIn","history","push","getTutGrp","deleteQuestion","OnBack","addToTutorial","currentQuestion","allquestion","filter","post","tutgrp","solution","level","section","filteredAllQuestion","tutquestion","find","z","Fragment","connect","quest","tutquestions","fetchPosts","fetchLeaderboard","getStudentSubmission","myCompletedTutorial","getCurrentUserScore","getCompetitorScore","Pagination","leaderboard","React","useState","columns","label","field","attributes","sort","rows","datatable","name","date","score","hover","entriesOptions","entries","pagesAmount","fullPagination","TwitterCard","src","waves","user","text","id_str","Home","twitterPosts","twitter","count","items","game","records","GuestNavbar","getStudentInfo","updateProfile","facebookAccountLink","getCompeteMyInfo","LoginForm","email","userpassword","fbid","fblogin","emaillogin","loading","wrongauth","handleChange","e","value","EmailLogin","password","emailLogin","responseFacebook","response","FbLogin","facebookLogin","handleKeyPress","event","componentWillReceiveProps","nextProps","loginstatus","setItem","picture","Navigate","delay","outline","md","xl","iconClass","onChange","onKeyPress","disabled","appId","fields","cssClass","callback","auth","login","Login","val","RegisterForm","cfmpassword","fbimage","fbdetails","console","log","url","handleSelectList","Validate","emailForm","emailChecking","Register","registerUser","componentDidUpdate","prevProps","alert","alt","textButton","registerstatus","status","emailcheck","TutorialTable","deleteTut","ViewTutorial","navigate","tutorial","tutname","createdby","addTutorial","showTutorials","AddTutorial","tutGroup","tutName","coins","userType","onSubmit","difficulty","addTut","getValue","handleTutList","group","validate","error","success","htmlFor","min","max","onBack","tutorialgrp","Assignment","GetTutorials","showProfTutorial","DelTutorial","deleteTutorial","tutorialtable","Logout","clear","StudentInfo","student","MarkScoreComment","record","inputChange","markComplete","goBack","placeholder","MarkPicture","image","Marking","submissionid","studid","comment","MarkingComplete","updateScores","GoBack","getStudentDetails","getSubmission","Proptypes","func","isRequired","submission","questionlist","studentinfo","scores","MarkingHome","showUserTutorial","StudentSelect","ViewDetails","getStudents","studentlist","students","StudentSubmit","onSelect","ldrid","selectSubmission","mycompletedtask","StudentMain","viewMySubmission","completedtut","Uploadfile","file","onChangeHandleFile","files","reader","FileReader","readAsDataURL","addEventListener","result","picUpload","inputs","containerClassName","StudentProfileCard","studname","profilepic","studemail","studtutgrp","StudentProfile","fbDisplay","onChoose","onSubmitAll","PictureUploaded","pic","FbLink","facebookBtn","allTutorials","ProfProfileCard","ProfessorProfile","getProfDetails","getProfInfo","lg","sm","profinfo","StudentNews","ClassmateList","selectCompetitor","competitorSelect","classmate","classmates","StudentAssignment","SendNotification","leaderboardid","notification","myCompletedtut","myTut","Compete","competitor","competitorid","Assignmentdisplay","CompetitorSelect","CreateNotification","requestorid","sendCompeteRequest","getMycompletedTutList","currentclass","classMates","Set","item","competeDisplay","mytut","Competitorlist","viewCompetition","compid","myldrid","myCompetitors","competitionid","Challengerlist","viewChallenge","oppldrid","challengerid","challenge","myChallenger","Challenger","ViewCompetition","ViewChallenge","CompeteMode","getCompetitor","getChallengers","getMyCompetitors","center","competitors","challengers","CompetitorDetail","details","MyDetails","Competitor","mystudid","SendComment","sendComment","getCompetitorDetails","getCompetitorScoreBoard","getMyScore","getmyDetails","myscore","myScore","parseInt","competitorscore","currentUserInfo","myInfo","ChallengerDetail","Challenge","retrieveComment","getMyScoreBoard","getOppScore","getComment","challengerScore","challengecomment","competitormsg","StudentCard","MySubmission","getLeaderBoardSubmission","ProfComment","studSubmission","answer","Routes","path","component","initState","AuthReducers","action","TwitterReducers","GameReducers","TutorialReducers","QuestReducers","RootReducer","combineReducers","middleWare","thunk","store","createStore","applyMiddleware","App","Store","overlay","marginTop","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.45e75b27.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nclass SolutionModal extends Component {\r\nstate = {\r\n  modal: false\r\n}\r\n\r\ntoggle = () => {\r\n  this.setState({\r\n    modal: !this.state.modal\r\n  });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBBtn size=\"sm\" color=\"blue\" onClick={this.toggle}>View</MDBBtn>\r\n      <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n        <MDBModalHeader toggle={this.toggle}>Solution for Question {this.props.ind}</MDBModalHeader>\r\n        <MDBModalBody>\r\n          <p>Question: {this.props.question.question}</p><br/>\r\n          <p>Solution: {this.props.question.solution}</p>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"red\" size=\"sm\" onClick={this.toggle}>Close</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolutionModal;","import React from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\nimport SolutionModal from './SolutionModal'\r\n\r\n\r\nexport default function QuestionList({ questions, addQuestion }) {\r\n  let onAdd = (questid) => {\r\n    addQuestion(questid)\r\n  }\r\n  return (\r\n    <div>\r\n      <MDBTable striped>\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Question</th>\r\n            <th>Add Question</th>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {questions && questions.map((x, index) => {\r\n            return (\r\n              <tr key={x.questid}>\r\n                <td>{index + 1}</td>\r\n                <td>{x.question}</td>\r\n                <td><MDBBtn size=\"sm\" color=\"blue\" onClick={() => onAdd(x.questid)}>Add</MDBBtn></td>              \r\n              </tr>\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </div>\r\n  )\r\n}\r\n","export const addQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REMOVE_QUESTION',\r\n            payload: postData.questid\r\n        })\r\n        );\r\n}\r\n\r\nexport const showAllQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/show/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SHOW_ALL_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const showTutorialQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/show/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SHOW_TUT_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  let title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBIcon, MDBDropdownItem } from 'mdbreact';\r\nimport { ReactComponent as Logo } from '../../assets/logo.svg';\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"name\"),\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    };\r\n    componentDidMount() {\r\n        if (!this.state.username)\r\n            this.props.validateLogin()\r\n    }\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        if (this.state.usertype == \"Professor\") {\r\n            return (\r\n                <div>\r\n                    <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                        <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                            <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                            <strong className='align-middle'>SSAD Project</strong>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler\r\n                            onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                        />\r\n                        <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        exact\r\n                                        to='/home'\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    >\r\n                                        <strong>Home</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/assignment'\r\n                                    >\r\n                                        <strong>Assignments</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/seltut'\r\n                                    >\r\n                                        <strong>Marking</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBDropdown>\r\n                                        <MDBDropdownToggle nav caret>\r\n                                            <MDBIcon icon=\"user\" /> {this.state.username}\r\n                                        </MDBDropdownToggle>\r\n                                        <MDBDropdownMenu className=\"dropdown-default\">\r\n                                            <MDBDropdownItem href=\"/professorprofile\">Profile</MDBDropdownItem>\r\n                                            <MDBDropdownItem href='/logout'>Logout</MDBDropdownItem>\r\n                                        </MDBDropdownMenu>\r\n                                    </MDBDropdown>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                        <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                            <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                            <strong className='align-middle'>SSAD Project</strong>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler\r\n                            onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                        />\r\n                        <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        exact\r\n                                        to='/studentmain'\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    >\r\n                                        <strong>Home</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/studentnews'\r\n                                    >\r\n                                        <strong>News</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/challenger'\r\n                                    >\r\n                                        <strong>Compete</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/assignment'\r\n                                    >\r\n                                        <strong>Assignments</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBDropdown>\r\n                                        <MDBDropdownToggle nav caret>\r\n                                            <MDBIcon icon=\"user\" /> {this.state.username}\r\n                                        </MDBDropdownToggle>\r\n                                        <MDBDropdownMenu className=\"dropdown-default\">\r\n                                            <MDBDropdownItem href=\"/studentprofile\">Profile</MDBDropdownItem>\r\n                                            <MDBDropdownItem href='/logout'>Logout</MDBDropdownItem>\r\n                                        </MDBDropdownMenu>\r\n                                    </MDBDropdown>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react'\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='indigo'>\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='#'> Team Ganyu (NTU Project) </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\nimport SolutionModal from './SolutionModal'\r\n\r\n\r\nexport default function TutQuestionList({ questions, removeQuestion }) {\r\n  let onDelete = (questid) => {\r\n    removeQuestion(questid)\r\n  }\r\n  return (\r\n    <div>\r\n      <MDBTable striped>\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Question</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {questions && questions.map((x, index) => {\r\n            return (\r\n              <tr key={x.questid}>\r\n                <td>{index + 1}</td>\r\n                <td>{x.question}</td>\r\n                <td><MDBBtn size=\"sm\" color=\"red\" onClick={() => onDelete(x.questid)}>Remove</MDBBtn></td>              \r\n              </tr>\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport QuestionList from '../components/questionpage/QuestionList'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showAllQuestion, addQuestion, deleteQuestion, showTutorialQuestion } from '../Redux/Actions/QuestActions'\r\nimport Navbar from '../components/share/Navbar';\r\nimport Footer from '../components/share/Footer';\r\nimport TutQuestionList from '../components/questionpage/TutQuestionList';\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        tutid: this.props.match.params.tutid,\r\n    };\r\n    getTutorialQuestions = () => {\r\n        const form = {\r\n            tutid: this.state.tutid,\r\n        }\r\n        this.props.showTutorialQuestion(form);\r\n    }\r\n    getQuestionList = () => {\r\n        const form = {\r\n            tutid: '0',\r\n        }\r\n        this.props.showAllQuestion(form);\r\n    }\r\n    componentDidMount() {\r\n        this.getTutorialQuestions();\r\n        this.getQuestionList();\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    getTutGrp = () => {\r\n        return localStorage.getItem(\"tutgrp\")\r\n    }\r\n    removeQuestion = (questid) => {\r\n        const form = {\r\n            questid: questid\r\n        }\r\n        this.props.deleteQuestion(form)\r\n    }\r\n    OnBack = () => {\r\n        this.props.history.push('/assignment')\r\n    }\r\n    addToTutorial = (questid) => {\r\n        let currentQuestion = this.props.allquestion.filter(x => x.questid === questid)\r\n        const post = {\r\n            question: currentQuestion[0].question,\r\n            tutgrp: this.getTutGrp(),\r\n            tutid: this.state.tutid,\r\n            solution: currentQuestion[0].solution,\r\n            level: currentQuestion[0].level,\r\n            section: currentQuestion[0].section\r\n        }\r\n        this.props.addQuestion(post)\r\n    }\r\n    render() {\r\n        let filteredAllQuestion = this.props.allquestion.filter(x => !this.props.tutquestion.find(z => z.question === x.question))\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <br />\r\n                            <h2>Current Tutorial Questions</h2>\r\n                            <hr />\r\n                            <TutQuestionList removeQuestion={this.removeQuestion} questions={this.props.tutquestion} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Questions Pool</h2>\r\n                            <hr />\r\n                            {/* <AddQuestion addQuest={this.AddQuestion} onBack={this.OnBack} /> */}\r\n                            <QuestionList addQuestion={this.addToTutorial} questions={filteredAllQuestion} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nQuestion.propTypes = {\r\n    showAllQuestion: PropTypes.func.isRequired,\r\n    addQuestion: PropTypes.func.isRequired,\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n    showTutorialQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tutquestion: state.quest.tutquestions,\r\n    allquestion: state.quest.questions\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { showTutorialQuestion, showAllQuestion, addQuestion, deleteQuestion })(Question)","export const fetchPosts = () => dispatch => {\r\n    fetch('https://breadplaza.com/api/public/index.php/api/ntusg')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_POST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n","export const fetchLeaderboard = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/leaderboard')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_LEADERBOARD',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudents = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/tut/student', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_LIST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudentSubmission = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/student/submission', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_SUBMISSION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const updateScores = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/marking/update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'UPDATE_SCORES',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const myCompletedTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/student/completed/tut', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'MY_COMPLETED_TUT',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const sendCompeteRequest = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/start/compete', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SEND_COMPETE_REQUEST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getChallengers = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/get/challengers', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_CHALLENGERS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getMyCompetitors = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/get/competitors', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_COMPETITORS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const sendComment = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/send/comment', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SEND_COMMENT',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const getComment = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/get/comment', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_COMMENT',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getCurrentUserScore = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/user/competitor', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_MY_SCORE',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getCompetitorScore = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/competitor', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_COMPETITOR_SCORE',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from 'react';\r\nimport { MDBDataTableV5, MDBAnimation } from 'mdbreact';\r\n\r\nexport default function Pagination({ leaderboard, tutgrp }) {\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: [\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Date submitted',\r\n        field: 'date',\r\n        sort: 'disabled',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Score',\r\n        field: 'score',\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n  //console.log(leaderboard)\r\n  leaderboard.filter(x => x.tutgrp === tutgrp).map(x => datatable.rows.push({ name: x.name, date: x.date, score: x.score }))\r\n\r\n\r\n  return <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable} fullPagination />;\r\n}","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\n\r\nconst TwitterCard = ({ post }) => {\r\n  return (\r\n    <MDBCol key={post.id_str} size=\"4\">\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src=\"https://download.logo.wine/logo/Nanyang_Technological_University/Nanyang_Technological_University-Logo.wine.png\" waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{post.user.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {post.text}\r\n          </MDBCardText>\r\n          <MDBBtn color=\"green\" href=\"https://twitter.com/NTUsg?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default TwitterCard;\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { fetchLeaderboard } from '../Redux/Actions/GameActions'\r\nimport LeaderBoard from '../components/homepage/LeaderBoard'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport TwitterCard from '../components/homepage/TwitterCard'\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.usertype == \"Student\")\r\n            this.props.history.push(\"/studentmain\")\r\n        this.props.fetchLeaderboard();\r\n        this.props.fetchPosts();\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    render() {\r\n        let twitterPosts = this.props.twitter.map(x => {\r\n            return (\r\n                <TwitterCard key={x.id_str} post={x} />\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <MDBAnimation type=\"slideInDown\" count={1}>\r\n                        <br />\r\n                        <h2>LeaderBoard</h2>\r\n                        <hr />\r\n                        <LeaderBoard leaderboard={this.props.leaderboard} />\r\n                        <br />\r\n                    </MDBAnimation >\r\n                    <MDBAnimation type=\"slideInUp\" count={1}>\r\n                        <h2>NTU Twitter News</h2>\r\n                        <hr />\r\n                        <MDBRow>\r\n                            {twitterPosts}\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n\r\n                </MDBContainer>\r\n\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nHome.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    fetchLeaderboard: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n    leaderboard: state.game.records\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchLeaderboard })(Home)\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink } from 'mdbreact';\r\nimport { ReactComponent as Logo } from '../../assets/logo.svg';\r\n\r\nclass GuestNavbar extends Component {\r\n    state = {\r\n        collapseID: ''\r\n    };\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        return (\r\n\r\n            <div>\r\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                        <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                        <strong className='align-middle'>SSAD Project</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/register'\r\n                                >\r\n                                    <strong>Register</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Login</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GuestNavbar","export const emailLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'EMAIL_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const facebookLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/fblogin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FACEBOOK_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const registerUser = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REGISTER_USER',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const testCall = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/test', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'TESTING',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudentInfo = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/studentinfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_DETAILS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getProfInfo = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/profinfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_PROF_DETAILS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\n\r\nexport const updateProfile = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/profile/update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'UPDATE_PROFILE',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const facebookAccountLink = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/facebook/link', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FACEBOOK_ACCOUNT_LINK',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const emailChecking = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/email/check', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'EMAIL_CHECK',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getCompeteMyInfo = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/studentinfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_MY_DETAILS',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"../css/index.css\";\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { emailLogin, facebookLogin } from '../../Redux/Actions/AuthAction'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    email: '',\r\n    userpassword: '',\r\n    fbid: '',\r\n    fblogin: false,\r\n    emaillogin: false,\r\n    loading: false,\r\n    wrongauth: false,\r\n  };\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  EmailLogin = () => {\r\n    const post = {\r\n\r\n      email: this.state.email,\r\n      password: this.state.userpassword\r\n\r\n    }\r\n    this.setState({\r\n      loading: !this.state.loading,\r\n      emaillogin: true\r\n    });\r\n    this.props.emailLogin(post);\r\n  }\r\n  responseFacebook = (response) => {\r\n    this.setState({\r\n      fbid: response.id,\r\n      fblogin: true\r\n    })\r\n    this.FbLogin(response.id)\r\n  }\r\n  FbLogin = (id) => {\r\n    const post = {\r\n      fbid: id\r\n    }\r\n    this.props.facebookLogin(post);\r\n  }\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter')\r\n      this.EmailLogin()\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.loginstatus.length !== 0) {\r\n      //Correct Authentication \r\n      localStorage.setItem(\"studid\", nextProps.loginstatus[0].id)\r\n      localStorage.setItem(\"fbid\", nextProps.loginstatus[0].fbid)\r\n      localStorage.setItem(\"name\", nextProps.loginstatus[0].name)\r\n      localStorage.setItem(\"email\", nextProps.loginstatus[0].email)\r\n      localStorage.setItem(\"usertype\", nextProps.loginstatus[0].usertype)\r\n      localStorage.setItem(\"tutgrp\", nextProps.loginstatus[0].tutgrp)\r\n      localStorage.setItem(\"picture\", nextProps.loginstatus[0].picture)\r\n      this.props.Navigate(\"/home\")\r\n    }\r\n    else {\r\n      //Wrong authentication\r\n      //This is used to manipulate the UI\r\n      this.setState({\r\n        loading: !this.state.loading,\r\n        userpassword: '',\r\n        email: '',\r\n        wrongauth: !this.state.wrongauth\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const { wrongauth } = this.state;\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Sign up right now!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Don't have an account? Register here!\r\n                  </h6>\r\n                  <MDBNavLink to='/register'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Register\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Login:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"userpassword\"\r\n                          value={this.state.userpassword}\r\n                          onChange={this.handleChange}\r\n                          onKeyPress={this.handleKeyPress}\r\n                        />\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn color=\"white\" onClick={this.EmailLogin} disabled={loading} >\r\n                            {loading && <span>Logging in</span>}\r\n                            {!loading && <span>login</span>}\r\n                          </MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"892789337958489\"\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n                          <hr className=\"hr-light\" />\r\n                          {wrongauth && <h2 className=\"red-text\">Wrong username or password</h2>}\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  emailLogin: PropTypes.func.isRequired,\r\n  facebookLogin: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loginstatus: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { emailLogin, facebookLogin })(LoginForm);","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport GuestNavbar from '../components/share/GuestNavBar'\r\nimport LoginForm from '../components/loginpage/LoginForm'\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <LoginForm Navigate={this.Navigate} />\r\n                \r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"../css/index.css\";\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport PropTypes from 'prop-types'\r\nimport { registerUser, emailChecking } from '../../Redux/Actions/AuthAction'\r\nimport { connect } from 'react-redux'\r\n\r\nclass RegisterForm extends React.Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cfmpassword: \"\",\r\n    usertype: \"Student\",\r\n    name: \"\",\r\n    fbimage: \"\",\r\n    fbid: \"\",\r\n    tutgrp: \"TS1\",\r\n    fbdetails: false,\r\n    loading: false\r\n  };\r\n\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response)\r\n    this.setState({\r\n      fbid: response.id,\r\n      fbimage: response.picture.data.url,\r\n      email: response.email,\r\n      name: response.name,\r\n      fbdetails: true\r\n    })\r\n  }\r\n  handleSelectList = (e) => {\r\n    this.setState({\r\n      tutgrp: e.target.value\r\n    })\r\n  }\r\n  Validate = () => {\r\n    const emailForm = {\r\n      email: this.state.email\r\n    }\r\n    this.props.emailChecking(emailForm);\r\n  }\r\n  Register = () => {\r\n    const form = {\r\n      fbid: this.state.fbid,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      usertype: \"Student\",\r\n      tutgrp: this.state.tutgrp\r\n    }\r\n    this.setState({ loading: true });\r\n    this.props.registerUser(form);\r\n    this.props.Navigate('/')\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.email === this.props.email)\r\n      return\r\n    else if (this.props.email.length === 0)\r\n      this.Register()\r\n    else if (this.props.email.length !== 0)\r\n      alert(\"Email used\")\r\n\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let fbimage = (!this.state.fbdetails) ? <React.Fragment /> : <center> <img width=\"150\" height=\"150\" src={this.state.fbimage} className=\"img-fluid z-depth-1 rounded-circle\" alt=\"\" /></center>\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Thank you for joining us!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Already have an account? Click the button below to go back\r\n                  </h6>\r\n                  <MDBNavLink to='/'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Login\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Register:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        {fbimage}\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Full Name\"\r\n                          icon=\"address-card\"\r\n                          id=\"name\"\r\n                          type=\"text\"\r\n                          value={this.state.name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Confirm Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"cfmpassword\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <select onChange={this.handleSelectList} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                          <option value={'TS1'}>TS1</option>\r\n                          <option value={'TS2'}>TS2</option>\r\n                          <option value={'TS3'}>TS3</option>\r\n                          <option value={'TS4'}>TS4</option>\r\n                        </select>\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn onClick={this.Validate} color=\"white\" disabled={loading} >\r\n                            {loading && <span>Registering</span>}\r\n                            {!loading && <span>Register</span>}\r\n                          </MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"892789337958489\"\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            textButton=\"Facebook Register\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  emailChecking: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  registerstatus: state.auth.status,\r\n  email: state.auth.emailcheck\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser, emailChecking })(RegisterForm);","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport GuestNavbar from '../components/share/GuestNavBar'\r\nimport RegisterForm from '../components/registerpage/RegisterForm'\r\n\r\nclass Register extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <RegisterForm Navigate={this.Navigate} />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register","import React, { Component } from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBLink } from 'mdbreact';\r\n\r\nclass TutorialTable extends Component {\r\n  state = {\r\n    loading: false\r\n  }\r\n  onDelete = (tutid) => {\r\n    this.setState({ loading: !this.state.loading })\r\n    this.props.deleteTut(tutid);\r\n  }\r\n  ViewTutorial = (tutid) => {\r\n    this.props.navigate(tutid)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.tutorial !== this.props.tutorial) {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <MDBTable striped>\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th>Assignment Name</th>\r\n            <th>Tutorial Group</th>\r\n            <th>Created by</th>\r\n            <th>Remove</th>\r\n            <th>View</th>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {this.props.tutorial && this.props.tutorial.map(x => {\r\n            return (\r\n              <tr key={x.tutid}>\r\n                <td>{x.tutname}</td>\r\n                <td>{x.tutgrp}</td>\r\n                <td>{x.createdby}</td>\r\n                {(!this.state.loading) ? <td><MDBBtn size=\"sm\" color=\"red\" onClick={() => this.onDelete(x.tutid)}>Remove</MDBBtn></td> : <td><MDBBtn size=\"sm\" color=\"red\" disabled>Removing</MDBBtn></td>}\r\n                <td><MDBBtn size=\"sm\" color=\"blue\" onClick={() => this.ViewTutorial(x.tutid)} > View </MDBBtn>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TutorialTable;","export const addTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'DELETE_TUTORIAL',\r\n            payload: data,\r\n            tutid: postData.tutid\r\n        })\r\n        );\r\n}\r\nexport const showTutorials = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/tutlist')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const showUserTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/user/tutlist', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_USER_TUTORIAL',\r\n            payload: data,\r\n        })\r\n        );\r\n}\r\nexport const showProfTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/prof/tutlist', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_PROF_TUTORIAL',\r\n            payload: data,\r\n        })\r\n        );\r\n}","import React, { Component } from 'react'\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { addTutorial } from '../../Redux/Actions/TutorialAction'\r\n\r\nclass AddTutorial extends Component {\r\n    state = {\r\n        tutGroup: localStorage.getItem(\"tutgrp\"),\r\n        tutName: '',\r\n        createdby: localStorage.getItem(\"name\"),\r\n        coins: 50,\r\n        loading: false,\r\n        userType: localStorage.getItem(\"usertype\"),\r\n    }\r\n    onSubmit = () => {\r\n        const post = {\r\n            tutname: this.state.tutName,\r\n            tutgrp: this.state.tutGroup,\r\n            createdby: this.state.createdby,\r\n            difficulty: this.state.difficulty,\r\n            coins: this.state.coins,\r\n\r\n        }\r\n        this.setState({\r\n            loading: !this.state.loading,\r\n            tutName: \"\"\r\n        })\r\n        this.props.addTut(post);\r\n    }\r\n\r\n    //    onBack =() =>{\r\n    //         this.props.history.push('/home')\r\n    //         // This.props.navigate()\r\n\r\n\r\n    //     }\r\n    handleChange = (e) => { //to handle change in inputs\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    getValue = (e) => {\r\n        this.setState({\r\n            coins: e.target.value\r\n        })\r\n    }\r\n    handleSelectList = (e) => {\r\n        this.setState({ difficulty: e.target.value })\r\n    }\r\n    handleTutList = (e) => {\r\n        this.setState({ tutGroup: e.target.value })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tutGroup !== this.props.tutGroup) {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"black-text\">\r\n                        <MDBInput value={this.state.tutName} label=\"Enter Assignment Name\" id='tutName' onChange={this.handleChange} icon=\"user-plus\" group type=\"text\" validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                        {(this.state.userType === \"Professor\") &&\r\n                            <React.Fragment>\r\n                                <label htmlFor=\"difficulty\">Select Tutorial Group</label>\r\n                                <select onChange={this.handleTutList} value={this.state.tutGroup} id=\"tutGroup\" className=\"browser-default custom-select\">\r\n                                    <option value={'TS1'}>TS1</option>\r\n                                    <option value={'TS2'}>TS2</option>\r\n                                    <option value={'TS3'}>TS3</option>\r\n                                    <option value={'TS4'}>TS4</option>\r\n                                </select>\r\n                            </React.Fragment>}\r\n                    </div>\r\n                    <label htmlFor=\"coins\">Number of coins: {this.state.coins}</label>\r\n                    <input type=\"range\" id=\"coins\" onChange={this.getValue} min=\"0\" max=\"100\" className=\"custom-range\" />\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.onSubmit} color=\"blue\" disabled={loading} >\r\n                            {loading && <span>Submitting</span>}\r\n                            {!loading && <span>Submit</span>}</MDBBtn>\r\n                        <MDBBtn color=\"green\" onClick={this.props.onBack}> Back\r\n                       </MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    tutGroup: state.tutorial.tutorialgrp\r\n});\r\n\r\nexport default connect(mapStateToProps, { addTutorial })(AddTutorial) //to be changed","\r\nimport React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBAnimation } from \"mdbreact\";\r\nimport TutorialTable from '../components/assignmentpage/TutorialTable'\r\nimport AddTutorial from '../components/assignmentpage/AddTutorial'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showTutorials, deleteTutorial, addTutorial, showProfTutorial } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/share/Navbar';\r\nimport Footer from '../components/share/Footer';\r\n\r\nclass Assignment extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        name: localStorage.getItem(\"name\"),\r\n    }\r\n    componentDidMount() {\r\n        //this.props.showAllTutorials();\r\n        this.GetTutorials()\r\n    }\r\n    GetTutorials = () => {\r\n        const form = {\r\n            tutgrp: this.state.tutgrp,\r\n            name: this.state.name\r\n        }\r\n        this.props.showProfTutorial(form);\r\n    }\r\n    Navigate = (tutid) => {\r\n        this.props.history.push('/question/' + tutid)\r\n    }\r\n    DelTutorial = (tutid) => {\r\n        const form = {\r\n            tutid: tutid\r\n        }\r\n        this.props.deleteTutorial(form)\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    AddTutorial = (form) => {\r\n        //Submit data to my api\r\n        this.props.addTutorial(form);\r\n    }\r\n    OnBack = () => {\r\n        this.props.history.push('/home')\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <br />\r\n                    \r\n                        <MDBRow >\r\n                            <MDBCol>\r\n                            <MDBAnimation type=\"slideInDown\" >\r\n                                <h2>Assignment List</h2>\r\n                                <hr />\r\n                                <TutorialTable deleteTut={this.DelTutorial} navigate={this.Navigate} tutorial={this.props.tutorialtable} />\r\n                                </MDBAnimation>\r\n                                <MDBAnimation type=\"slideInUp\">\r\n                                <br />\r\n                                <h3>Assignment Creation</h3>\r\n                                <hr />\r\n                                <AddTutorial addTut={this.AddTutorial} onBack={this.OnBack} />\r\n                                </MDBAnimation>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    \r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nAssignment.propTypes = {\r\n    showTutorials: PropTypes.func.isRequired,\r\n    deleteTutorial: PropTypes.func.isRequired,\r\n    addTutorial: PropTypes.func.isRequired,\r\n    showProfTutorial: PropTypes.func.isRequired\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    tutorialtable: state.tutorial.tutorialgrp,\r\n});\r\n\r\n// connection this component to database.\r\nexport default connect(mapStateToProps, { showProfTutorial, showTutorials, deleteTutorial, addTutorial })(Assignment)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst StudentInfo = ({ student }) => {\r\n  return (\r\n    <div>\r\n      {student && student.map(x => {\r\n        return (\r\n          <MDBCard key={x.id} style={{ width: \"22rem\" }}>\r\n            <MDBCardImage className=\"img-fluid\" src={x.picture} waves />\r\n            <MDBCardBody>\r\n              <MDBCardTitle>{x.name}</MDBCardTitle>\r\n              <MDBCardText>\r\n                Email: {x.email} <br />\r\n                Tutorial Group: {x.tutgrp}\r\n              </MDBCardText>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentInfo;","import React from \"react\";\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst MarkScoreComment = ({ record, inputChange, markComplete, goBack }) => {\r\n  return (\r\n    <div>\r\n      {record.map(x => {\r\n        return (\r\n          <form key={x.id}>\r\n            <div className=\"grey-text\">\r\n              <MDBInput label=\"Score\" placeholder=\"Enter Score\" id=\"score\" onChange={inputChange} className=\"w-100\" icon=\"star\" group type=\"email\" validate error=\"wrong\"\r\n                success=\"right\" />\r\n              <MDBInput label=\"Comment\" placeholder=\"Enter Comments\" id=\"comment\" onChange={inputChange} className=\"w-100\" icon=\"comment\" group type=\"email\" validate error=\"wrong\"\r\n                success=\"right\" />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn color=\"blue\" onClick={markComplete}>Submit</MDBBtn>\r\n              <MDBBtn color=\"green\" onClick = {goBack} > Back\r\n                       </MDBBtn>\r\n            </div>\r\n            \r\n          </form>\r\n        )\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkScoreComment;","import React from 'react';\r\n\r\nimport { MDBRow, MDBCol, MDBContainer } from \"mdbreact\";\r\n\r\nconst MarkPicture = ({ record }) => {\r\n  return (\r\n    <div>\r\n      {record.map(x => {\r\n        return (\r\n          <MDBRow key={x.id}>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <img src={x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n            </MDBCol>\r\n          </MDBRow>\r\n        )\r\n      })\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MarkPicture;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation } from \"mdbreact\";\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentSubmission, updateScores } from '../Redux/Actions/GameActions'\r\nimport { showTutorialQuestion } from '../Redux/Actions/QuestActions'\r\nimport { getStudentInfo } from '../Redux/Actions/AuthAction'\r\nimport StudentInfo from '../components/marking/StudentInfo';\r\nimport MarkDropDown from '../components/marking/MarkDropDown';\r\nimport MarkScoreComment from '../components/marking/MarkScoreComment';\r\nimport MarkPicture from '../components/marking/MarkPicture'\r\nimport Navbar from '../components/share/Navbar';\r\nimport Footer from '../components/share/Footer';\r\n\r\n\r\nclass Marking extends Component {\r\n    state = {\r\n        submissionid: this.props.match.params.id,\r\n        tutid: localStorage.getItem(\"selectedtutid\"),\r\n        studid: this.props.match.params.studid,\r\n        score: '',\r\n        comment: ''\r\n    }\r\n    componentDidMount() {\r\n        this.getStudentDetails();\r\n        this.getSubmission();\r\n        this.getTutorialQuestions();\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    getSubmission() {\r\n        const form = {\r\n            id: this.state.submissionid,\r\n        }\r\n        this.props.getStudentSubmission(form)\r\n    }\r\n    getTutorialQuestions() {\r\n        const form = {\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.showTutorialQuestion(form)\r\n    }\r\n    getStudentDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    MarkingComplete = () => {\r\n        const form = {\r\n            id: this.state.submissionid,\r\n            score: this.state.score,\r\n            comment: this.state.comment\r\n        }\r\n        this.props.updateScores(form)\r\n        this.props.history.push(\"/seltut\")\r\n    }\r\n\r\n    GoBack = () => {\r\n        this.props.history.push(\"/seltut\")\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <br />\r\n\r\n                    <MDBAnimation type=\"slideInDown\">\r\n                        <MDBRow>\r\n                            <MDBCol size=\"6\">\r\n                                <h2>Student Details</h2>\r\n                                <hr />\r\n                                <StudentInfo student={this.props.student} />\r\n                            </MDBCol>\r\n                            <MDBCol size=\"6\">\r\n                                <h2>Students Answer</h2>\r\n                                <hr />\r\n                                <MarkPicture record={this.props.record} />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n\r\n                    <MDBAnimation type=\"slideInUp\">\r\n                        <MDBRow>\r\n                            {/* <MDBCol size=\"6\">\r\n                                <br></br>\r\n                                <h2>Answer Key</h2>\r\n                                <MarkDropDown questions={this.props.questionlist} />\r\n                            </MDBCol> */}\r\n                            <MDBCol size=\"12\">\r\n                                <br />\r\n                                <h2>Marking</h2>\r\n                                <MarkScoreComment markComplete={this.MarkingComplete} goBack={this.GoBack} inputChange={this.handleChange} record={this.props.record} />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nMarking.Proptypes = {\r\n    getStudentSubmission: Proptypes.func.isRequired,\r\n    showTutorialQuestion: Proptypes.func.isRequired,\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    updateScores: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    record: state.game.submission,\r\n    questionlist: state.quest.questions,\r\n    student: state.auth.studentinfo,\r\n    scores: state.game.status\r\n})\r\nexport default connect(mapStateToProps, { getStudentSubmission, showTutorialQuestion, getStudentInfo, updateScores })(Marking)","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBAnimation } from 'mdbreact';\r\nimport { showTutorials, showUserTutorial } from '../Redux/Actions/TutorialAction'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../components/share/Navbar';\r\nimport Footer from '../components/share/Footer';\r\n\r\nclass MarkingHome extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\")\r\n    }\r\n    componentDidMount() {\r\n        //this.props.showAllTutorials();\r\n        this.GetTutorials()\r\n    }\r\n    GetTutorials = () => {\r\n        const form = {\r\n            tutgrp: this.state.tutgrp\r\n        }\r\n        this.props.showUserTutorial(form);\r\n    }\r\n\r\n    GoBack = () => { this.props.history.push('/home') }\r\n\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    ViewTutorial = (tutid) => {\r\n        var tutgrp = this.props.tutorialtable.filter(x => x.tutid == tutid).map(z => z.tutgrp)\r\n        localStorage.setItem(\"seltutgrp\", tutgrp)\r\n        localStorage.setItem(\"selectedtutid\", tutid)\r\n        this.props.history.push('/student/' + tutid)\r\n    }\r\n    render() {\r\n        let tutorialgrp = this.props.tutorialtable.map(x => {\r\n            return (\r\n                <tr key={x.tutid}>\r\n                    <td>{x.tutname}</td>\r\n                    <td>{x.tutgrp}</td>\r\n                    <td>{x.createdby}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.ViewTutorial(x.tutid)}> Select </MDBBtn></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBAnimation type=\"slideInDown\">\r\n                        <MDBRow>\r\n                            <MDBCol size=\"12\">\r\n                                <h2>Select Assignment to Mark</h2>\r\n                                <hr />\r\n                                <MDBTable striped>\r\n                                    <MDBTableHead>\r\n                                        <tr>\r\n                                            <th>Assignment Name</th>\r\n                                            <th>Tutorial Group</th>\r\n                                            <th>Created by</th>\r\n                                            <th>Select</th>\r\n                                        </tr>\r\n                                    </MDBTableHead>\r\n                                    <MDBTableBody>\r\n                                        {tutorialgrp}\r\n                                    </MDBTableBody>\r\n                                </MDBTable>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBBtn color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nMarkingHome.propTypes = {\r\n    showTutorials: PropTypes.func.isRequired,\r\n    showUserTutorial: PropTypes.func.isRequired\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    tutorialtable: state.tutorial.tutorialgrp,\r\n});\r\n\r\nexport default connect(mapStateToProps, { showTutorials, showUserTutorial })(MarkingHome)","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBAnimation } from 'mdbreact';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getStudents } from '../Redux/Actions/GameActions'\r\nimport Navbar from '../components/share/Navbar';\r\nimport Footer from '../components/share/Footer';\r\n\r\nclass StudentSelect extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"seltutgrp\"),\r\n        tutid: this.props.match.params.tutid\r\n    }\r\n    componentDidMount() {\r\n        this.getStudents()\r\n    }\r\n    getStudents() {\r\n        const form = {\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.getStudents(form)\r\n    }\r\n    ViewDetails = (submissionid, studid) => {\r\n        this.props.history.push('/marking/' + submissionid + \"/\" + studid)\r\n    }\r\n    GoBack = () => { this.props.history.push('/seltut') }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    render() {\r\n        let studentlist = this.props.students.map(x => {\r\n            return (\r\n                <tr key={x.id}>\r\n                    <td>{x.name}</td>\r\n                    <td>{x.date}</td>\r\n                    <td>{x.tutgrp}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.ViewDetails(x.id, x.studid)}> Select </MDBBtn></td>\r\n                </tr>\r\n            );\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBAnimation type=\"slideInDown\" >\r\n                        <MDBRow>\r\n                            <MDBCol size=\"12\">\r\n                                <h2>Select Student to Mark from Group: {this.state.tutgrp}</h2>\r\n                                <hr />\r\n                                <MDBTable striped>\r\n                                    <MDBTableHead>\r\n                                        <tr>\r\n                                            <th>Student Name</th>\r\n                                            <th>Date Submitted</th>\r\n                                            <th>Tutorial Group</th>\r\n                                            <th>Select</th>\r\n                                        </tr>\r\n                                    </MDBTableHead>\r\n                                    <MDBTableBody>\r\n                                        {studentlist}\r\n                                    </MDBTableBody>\r\n                                </MDBTable>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBBtn color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nStudentSelect.propTypes = {\r\n    getStudents: PropTypes.func.isRequired,\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    students: state.game.studentlist,\r\n});\r\nexport default connect(mapStateToProps, { getStudents })(StudentSelect)","import React, {Component} from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\nclass StudentSubmit extends Component {\r\n  onSelect = (ldrid) => {\r\n    this.props.selectSubmission(ldrid)\r\n  }\r\n  render() {\r\n    return (\r\n      <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>Score</th>\r\n          <th>View</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {this.props.mycompletedtask && this.props.mycompletedtask.map(x => {\r\n          return(\r\n        <tr key = {  x.studid }>\r\n          <td>{x.name}</td>\r\n          <td>{x.date}</td>\r\n          <td>{x.score}</td>\r\n          <td><MDBBtn color=\"green\" onClick={() => this.onSelect(x.id)} size=\"sm\">View</MDBBtn></td>\r\n        </tr>\r\n        \r\n          )\r\n  })}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StudentSubmit;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { fetchLeaderboard, myCompletedTutorial } from '../Redux/Actions/GameActions'\r\nimport LeaderBoard from '../components/homepage/LeaderBoard'\r\nimport StudentSubmit from '../components/studentmainpage/StudentSubmit'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\n\r\n\r\nclass StudentMain extends Component {\r\n    state = {\r\n        studid: localStorage.getItem(\"studid\"),\r\n        tutgrp: localStorage.getItem(\"tutgrp\")\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchLeaderboard();\r\n        this.props.fetchPosts();\r\n        this.getStudentSubmission()\r\n    }\r\n    getStudentSubmission(){\r\n        const form = {\r\n            studid: this.state.studid\r\n        }\r\n        this.props.myCompletedTutorial(form);\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    viewMySubmission = (ldrid) => {\r\n        this.props.history.push('/submission/' + ldrid)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                \r\n                <MDBContainer>\r\n                <MDBAnimation type=\"slideInDown\" count={1}>\r\n                    <br />\r\n                    <h2>LeaderBoard</h2>\r\n                    <hr />\r\n                    <LeaderBoard leaderboard={this.props.leaderboard} tutgrp={this.state.tutgrp} />\r\n                    </MDBAnimation>\r\n                    <MDBAnimation type=\"slideInUp\" count={1}>\r\n                    <br />\r\n\r\n                    <h2>Personal Submission</h2>\r\n                    <StudentSubmit selectSubmission={this.viewMySubmission} mycompletedtask={this.props.mycompletedtask} />\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStudentMain.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    fetchLeaderboard: PropTypes.func.isRequired,\r\n    myCompletedTutorial:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n    leaderboard: state.game.records,\r\n    mycompletedtask: state.game.completedtut\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchLeaderboard, myCompletedTutorial })(StudentMain)\r\n","import React, { Component } from 'react'\r\nimport { MDBInputGroup, MDBBtn } from 'mdbreact';\r\n\r\nexport default class Uploadfile extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            file: []\r\n        }\r\n    }\r\n\r\n    onChangeHandleFile = (e) => {\r\n        console.log(e.target.files[0])\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n                this.setState(state => ({\r\n                    ...state,\r\n                    form: {\r\n                        file: [reader.result]\r\n                    }\r\n                }));\r\n                const url = reader.result;\r\n                //console.log(\"#####\", url);\r\n                //Call Parent Component Method\r\n                this.props.picUpload(url)\r\n            },\r\n            false\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBInputGroup id='file'\r\n                inputs={\r\n                    <div className=\"custom-file\">\r\n                        <input onChange={this.onChangeHandleFile}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                            Choose file\r\n                        </label>\r\n                    </div>\r\n                }\r\n                containerClassName=\"mb-3\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst StudentProfileCard = ({ studname, profilepic, studemail, studtutgrp }) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profilepic} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{studname}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {studemail} <br />\r\n                Tutorial Group: {studtutgrp}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentProfileCard;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBInputGroup, MDBAnimation } from \"mdbreact\"\r\nimport Uploadfile from '../components/share/Uploadfile'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentInfo, updateProfile, facebookAccountLink } from '../Redux/Actions/AuthAction'\r\nimport { showTutorials } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport StudentProfileCard from '../components/studentprofile/StudentProfileCard'\r\n\r\nclass StudentProfile extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        email: localStorage.getItem(\"email\"),\r\n        picture: localStorage.getItem(\"picture\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        fbid: localStorage.getItem(\"fbid\"),\r\n        fbDisplay: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.fbid == '') {\r\n            this.setState({ fbDisplay: true })\r\n        }\r\n        this.getStudentDetails();\r\n        this.props.showTutorials();\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    getStudentDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n\r\n    onChoose = (e) => {\r\n        this.setState({\r\n            tutgrp: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitAll = () => {\r\n        const form = {\r\n            id: this.state.studid,\r\n            name: this.state.name,\r\n            fbid: this.state.fbid,\r\n            email: this.state.email,\r\n            picture: this.state.picture,\r\n            tutgrp: this.state.tutgrp\r\n        }\r\n        this.props.updateProfile(form);\r\n        localStorage.setItem(\"picture\", this.state.picture)\r\n        localStorage.setItem(\"tutgrp\", this.state.tutgrp)\r\n        localStorage.setItem(\"email\", this.state.email)\r\n        localStorage.setItem(\"name\", this.state.name)\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        this.props.history.push(\"/home\")\r\n    }\r\n\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    PictureUploaded = (pic) => {\r\n        console.log(pic)\r\n        this.setState({ picture: pic });\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        this.setState({\r\n            fbid: response.id,\r\n            fblogin: true\r\n        })\r\n        this.FbLink(response.id)\r\n    }\r\n    FbLink = (id) => {\r\n        this.setState({\r\n            fbid: id,\r\n            fbDisplay: false\r\n        })\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        const form = {\r\n            id: this.state.studid,\r\n            fbid: this.state.fbid\r\n        }\r\n        this.props.facebookAccountLink(form)\r\n    }\r\n    GoBack = () => { this.props.history.push('/studentmain') }\r\n\r\n    render() {\r\n        let facebookBtn = (this.state.fbDisplay) ? <FacebookLogin appId=\"892789337958489\"\r\n            textButton=\"Link with Facebook\"\r\n            fields=\"name,email,picture\"\r\n            cssClass=\"btn btn-sm blue white-text\"\r\n            callback={this.responseFacebook}\r\n        /> : <React.Fragment> You have successfully linked your account with facebook </React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"5\">\r\n                            <MDBAnimation type=\"slideInLeft\">\r\n                                <div>\r\n                                    <h3>Live Preview</h3>\r\n                                    <hr />\r\n                                    {/* The pic will take very long to load */}\r\n                                    <StudentProfileCard profilepic={this.state.picture} studname={this.state.name} studemail={this.state.email} studtutgrp={this.state.tutgrp} />\r\n                                </div>\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                        <MDBCol size=\"7\">\r\n                        <MDBAnimation type=\"slideInRight\">\r\n                            <h3>Update Profile</h3>\r\n                            <hr />\r\n                            <MDBInput id='name' value={this.state.name} label=\"Full Name\" icon=\"user\" disabled onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <MDBInput id='email' value={this.state.email} label=\"E-mail address\" icon=\"envelope\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <Uploadfile picUpload={this.PictureUploaded} />\r\n                            <select onChange={this.onChoose} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                                <option value={'TS1'}>TS1</option>\r\n                                <option value={'TS2'}>TS2</option>\r\n                                <option value={'TS3'}>TS3</option>\r\n                                <option value={'TS4'}>TS4</option>\r\n                            </select>\r\n                            <br /> <br />\r\n                            {facebookBtn}\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.onSubmitAll}\r\n                                color=\"blue\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Update Profile\r\n                            </MDBBtn>\r\n                            <br />\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.GoBack}\r\n                                color=\"green\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Back\r\n                            </MDBBtn>\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nStudentProfile.Proptypes = {\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    showTutorials: Proptypes.func.isRequired,\r\n    facebookAccountLink: Proptypes.func.isRequired,\r\n    updateProfile: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.studentinfo,\r\n    allTutorials: state.tutorial.tutorialgrp,\r\n\r\n})\r\nexport default connect(mapStateToProps, { getStudentInfo, showTutorials, updateProfile, facebookAccountLink })(StudentProfile)\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst ProfProfileCard = ({ studname, profilepic, studemail, studtutgrp }) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profilepic} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{studname}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {studemail} <br />\r\n                Tutorial Group: {studtutgrp}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfProfileCard;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBInputGroup, MDBAnimation } from \"mdbreact\"\r\nimport Uploadfile from '../components/share/Uploadfile'\r\nimport StudentInfo from '../components/marking/StudentInfo'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getProfInfo, updateProfile, facebookAccountLink } from '../Redux/Actions/AuthAction'\r\nimport { showTutorials } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport ProfProfileCard from '../components/profprofile/ProfProfileCard'\r\n\r\nclass ProfessorProfile extends Component {\r\n\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        email: localStorage.getItem(\"email\"),\r\n        picture: localStorage.getItem(\"picture\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        fbid: localStorage.getItem(\"fbid\"),\r\n        fbDisplay: false\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.fbid == '') {\r\n            this.setState({ fbDisplay: true })\r\n        }\r\n        this.getProfDetails();\r\n        this.props.showTutorials();\r\n    }\r\n\r\n    getProfDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getProfInfo(form)\r\n    }\r\n\r\n    onChoose = (e) => {\r\n        this.setState({\r\n            tutgrp: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitAll = () => {\r\n        const form = {\r\n            id: this.state.studid,\r\n            name: this.state.name,\r\n            fbid: this.state.fbid,\r\n            email: this.state.email,\r\n            picture: this.state.picture,\r\n            tutgrp: this.state.tutgrp\r\n        }\r\n        this.props.updateProfile(form);\r\n        localStorage.setItem(\"picture\", this.state.picture)\r\n        localStorage.setItem(\"tutgrp\", this.state.tutgrp)\r\n        localStorage.setItem(\"email\", this.state.email)\r\n        localStorage.setItem(\"name\", this.state.name)\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        this.props.history.push(\"/home\")\r\n    }\r\n\r\n    GoBack = ()=> { this.props.history.push(\"/home\")}\r\n\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    PictureUploaded = (pic) => {\r\n        console.log(pic)\r\n        this.setState({ picture: pic });\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        this.setState({\r\n            fbid: response.id,\r\n            fblogin: true\r\n        })\r\n        this.FbLink(response.id)\r\n    }\r\n    FbLink = (id) => {\r\n        this.setState({\r\n            fbid: id,\r\n            fbDisplay: false\r\n        })\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        const form = {\r\n            id: this.state.studid,\r\n            fbid: this.state.fbid\r\n        }\r\n        this.props.facebookAccountLink(form)\r\n    }\r\n\r\n    render() {\r\n        let facebookBtn = (this.state.fbDisplay) ? <FacebookLogin appId=\"892789337958489\"\r\n            textButton=\"Link with Facebook\"\r\n            fields=\"name,email,picture\"\r\n            cssClass=\"btn btn-sm blue white-text\"\r\n            callback={this.responseFacebook}\r\n        /> : <React.Fragment> You have successfully linked your account with facebook </React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        \r\n                        <MDBCol size=\"5\" lg = \"5\" sm = \"12\" >\r\n                        <MDBAnimation type=\"slideInLeft\">\r\n                            <div>\r\n                                <h3>Live Preview</h3>\r\n                                <hr />\r\n                                {/* The pic will take very long to load */}\r\n                                <ProfProfileCard profilepic={this.state.picture} studname={this.state.name} studemail={this.state.email} studtutgrp={this.state.tutgrp} />\r\n                            </div>\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                        \r\n                        \r\n                        <MDBCol  size=\"7\" lg = \"7\" sm = \"12\">\r\n                        <MDBAnimation type=\"slideInRight\">\r\n                            <h3>Update Profile</h3>\r\n                            <hr />\r\n                            <MDBInput id='name' value={this.state.name} label=\"Full Name\" icon=\"user\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <MDBInput id='email' value={this.state.email} label=\"E-mail address\" icon=\"envelope\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <Uploadfile picUpload={this.PictureUploaded} />\r\n                            <select onChange={this.onChoose} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                                <option value={'TS1'}>TS1</option>\r\n                                <option value={'TS2'}>TS2</option>\r\n                                <option value={'TS3'}>TS3</option>\r\n                                <option value={'TS4'}>TS4</option>\r\n                            </select>\r\n                            <br /> <br />\r\n                            {facebookBtn}\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.onSubmitAll}\r\n                                color=\"blue\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Update Profile\r\n                            </MDBBtn>\r\n                            <br />\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.GoBack}\r\n                                color=\"green\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Back\r\n                            </MDBBtn>\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                        \r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nProfessorProfile.Proptypes = {\r\n    getProfInfo: Proptypes.func.isRequired,\r\n    showTutorials: Proptypes.func.isRequired,\r\n    facebookAccountLink: Proptypes.func.isRequired,\r\n    updateProfile: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.profinfo,\r\n    allTutorials: state.tutorial.tutorialgrp,\r\n\r\n})\r\nexport default connect(mapStateToProps, { getProfInfo, showTutorials, updateProfile, facebookAccountLink })(ProfessorProfile)\r\n","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { connect } from 'react-redux'\r\nimport { MDBContainer, MDBRow, MDBBtn,MDBAnimation } from \"mdbreact\"\r\n\r\n\r\nimport TwitterCard from '../components/homepage/TwitterCard'\r\n\r\nclass StudentNews extends Component {\r\n    state = {\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.usertype == \"Professor\")\r\n            this.props.history.push(\"/home\")\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    GoBack=() => {this.props.history.push(\"/studentmain\")}\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    render() {\r\n        let twitterPosts = this.props.twitter.map(x => {\r\n            return (\r\n                <TwitterCard key={x.id_str} post={x} />\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBAnimation type=\"slideInUp\" count={1}>\r\n                <MDBContainer>\r\n                    <br />\r\n                    <h2>NTU Assignment News</h2>\r\n                    <hr />\r\n                    <MDBRow>\r\n                        {twitterPosts}\r\n                    </MDBRow>\r\n                    <br/>\r\n                    <MDBBtn color=\"red\" onClick = {this.GoBack} > Back\r\n                       </MDBBtn>\r\n                    <br />\r\n                </MDBContainer>\r\n                </MDBAnimation>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStudentNews.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(StudentNews)\r\n","import React, { Component } from 'react'\r\nimport { MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon } from 'mdbreact';\r\n\r\nclass ClassmateList extends Component {\r\n    selectCompetitor = (name, id) =>{\r\n        this.props.competitorSelect(name,id)\r\n    }\r\n\r\n    render() {\r\n        let classmate = this.props.classmates.map(x => {\r\n            return(\r\n                <MDBListGroupItem key={x.studid} className=\"d-flex justify-content-between align-items-center\" onClick={() => this.selectCompetitor(x.name, x.studid)} hover>{x.name}<MDBIcon icon=\"arrow-right\" />\r\n                </MDBListGroupItem>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <MDBListGroup style={{ width: \"22rem\" }}>\r\n                   {classmate}\r\n                </MDBListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ClassmateList","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nclass StudentAssignment extends Component {\r\n    SendNotification = (leaderboardid,tutid) =>{\r\n        this.props.notification(leaderboardid,tutid)\r\n    }\r\n    render() {\r\n        let myCompletedtut = this.props.myTut.map(x => {\r\n            return (\r\n                <tr key={x.id}>\r\n                    <td>{x.tutname}</td>\r\n                    <td>{x.score}</td>\r\n                    <td>{x.date}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.SendNotification(x.id,x.tutid)}> Compete </MDBBtn></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <MDBTable hover>\r\n                    <MDBTableHead>\r\n                        <tr>\r\n                            <th>Assignment Name</th>\r\n                            <th>Score</th>\r\n                            <th>Submitted on</th>\r\n                            <th>Compete</th>\r\n                        </tr>\r\n                    </MDBTableHead>\r\n                    <MDBTableBody>\r\n                        {myCompletedtut}\r\n                    </MDBTableBody>\r\n                </MDBTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default StudentAssignment","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\r\nimport ClassmateList from '../components/competepage/ClassmateList'\r\nimport StudentAssignment from '../components/competepage/StudentAssignment'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchLeaderboard, myCompletedTutorial, sendCompeteRequest } from '../Redux/Actions/GameActions'\r\n\r\nclass Compete extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        competitor: '',\r\n        competitorid: '',\r\n        Assignmentdisplay: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchLeaderboard();\r\n        this.getMycompletedTutList();\r\n    }\r\n    getMycompletedTutList() {\r\n        const form = {\r\n            studid: this.state.studid\r\n        }\r\n        this.props.myCompletedTutorial(form)\r\n    }\r\n    CompetitorSelect = (name, competitorid) => {\r\n        this.setState({ competitor: name, competitorid: competitorid, Assignmentdisplay: true })\r\n    }\r\n    CreateNotification = (leaderboardid, tutid) => {\r\n        const form = {\r\n            requestorid: localStorage.getItem(\"studid\"),\r\n            competitorid: this.state.competitorid,\r\n            leaderboardid: leaderboardid,\r\n            tutid: tutid\r\n        }\r\n        this.props.sendCompeteRequest(form);\r\n        this.props.history.push(\"/challenger\")\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n\r\n    GoBack = () => { this.props.history.push(\"/studentmain\") }\r\n    render() {\r\n        let currentclass = this.props.leaderboard.filter(x => x.tutgrp === this.state.tutgrp && x.name !== this.state.name)\r\n        let classMates = [...new Set(currentclass.map(item => ({ name: item.name, studid: item.studid })))];\r\n        let competeDisplay = (this.state.competitor === '') ? <h3>My classmates</h3> : <h3>Competing with {this.state.competitor}</h3>;\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n\r\n                        <MDBCol size=\"4\">\r\n                            <MDBAnimation type=\"slideInLeft\" >\r\n                                {competeDisplay}\r\n                                <hr />\r\n                                <ClassmateList classmates={classMates} competitorSelect={this.CompetitorSelect} />\r\n\r\n                            </MDBAnimation>\r\n\r\n                        </MDBCol>\r\n\r\n\r\n                        <MDBCol size=\"8\">\r\n                            {this.state.Assignmentdisplay &&\r\n                                <MDBAnimation type=\"slideInRight\">\r\n                                    <h3>Which Assignment to compete?</h3>\r\n                                    <hr />\r\n                                    <StudentAssignment myTut={this.props.mytut} notification={this.CreateNotification} />\r\n                                </MDBAnimation>\r\n                            }\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                    <MDBAnimation type=\"slideInLeft\" >\r\n                        <MDBBtn color=\"red\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\nCompete.propTypes = {\r\n    fetchLeaderboard: PropTypes.func.isRequired,\r\n    myCompletedTutorial: PropTypes.func.isRequired,\r\n    sendCompeteRequest: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    leaderboard: state.game.records,\r\n    mytut: state.game.completedtut\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchLeaderboard, myCompletedTutorial, sendCompeteRequest })(Compete)","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nclass Competitorlist extends Component {\r\n    viewCompetition = (compid, studid, tutid, myldrid) => {\r\n        localStorage.setItem(\"compstudid\", studid);\r\n        localStorage.setItem(\"compid\", compid);\r\n        localStorage.setItem(\"comptutid\", tutid)\r\n        localStorage.setItem(\"myldrid\", myldrid)\r\n        this.props.navigate()\r\n    }\r\n    render() {\r\n        let competitor = this.props.myCompetitors.map(x => {\r\n            return (\r\n                <tr key={x.competitionid}>\r\n                    <td>{x.name}</td>\r\n                    <td>{x.tutname}</td>\r\n                    <td>{x.score}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.viewCompetition(x.competitionid, x.id, x.tutid, x.leaderboardid)}>View More</MDBBtn></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <MDBTable hover>\r\n                    <MDBTableHead>\r\n                        <tr>\r\n                            <th>Competitor Name</th>\r\n                            <th>Tutorial Name</th>\r\n                            <th>My Score</th>\r\n                            <th>View</th>\r\n                        </tr>\r\n                    </MDBTableHead>\r\n                    <MDBTableBody>\r\n                        {competitor}\r\n                    </MDBTableBody>\r\n                </MDBTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Competitorlist","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nclass Challengerlist extends Component {\r\n    viewChallenge = (compid, studid, tutid, oppldrid, challengerid) => {\r\n        localStorage.setItem(\"mystudid\", studid);\r\n        localStorage.setItem(\"compid\", compid);\r\n        localStorage.setItem(\"comptutid\", tutid)\r\n        localStorage.setItem(\"oppldrid\", oppldrid)\r\n        localStorage.setItem(\"challengerid\", challengerid)\r\n        this.props.navigate()\r\n    }\r\n    render() {\r\n        let challenge = this.props.myChallenger.map(x => {\r\n            return (\r\n                <tr key={x.competitionid}>\r\n                    <td>{x.name}</td>\r\n                    <td>{x.tutname}</td>\r\n                    <td>{x.score}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.viewChallenge(x.competitionid, x.competitorid, x.tutid, x.leaderboardid, x.id)}>View More</MDBBtn></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <MDBTable hover>\r\n                    <MDBTableHead>\r\n                        <tr>\r\n                            <th>Challenger Name</th>\r\n                            <th>Tutorial Name</th>\r\n                            <th>Challengers Score</th>\r\n                            <th>View</th>\r\n                        </tr>\r\n                    </MDBTableHead>\r\n                    <MDBTableBody>\r\n                        {challenge}\r\n                    </MDBTableBody>\r\n                </MDBTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Challengerlist","export default __webpack_public_path__ + \"static/media/challenge.4605cf4f.jpg\";","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\r\nimport Competitorlist from '../components/challengerpage/Competitorlist'\r\nimport Challengerlist from '../components/challengerpage/Challengerlist'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getMyCompetitors, getChallengers } from '../Redux/Actions/GameActions'\r\nimport challenge from '../assets/challenge.jpg'\r\n\r\nclass Challenger extends Component {\r\n    state = {\r\n        studid: localStorage.getItem(\"studid\")\r\n    }\r\n    componentDidMount() {\r\n        this.getCompetitor();\r\n        this.getChallengers();\r\n    }\r\n    getCompetitor() {\r\n        const form = {\r\n            requestorid: this.state.studid\r\n        }\r\n        this.props.getMyCompetitors(form)\r\n    }\r\n    getChallengers() {\r\n        const form = {\r\n            competitorid: this.state.studid\r\n        }\r\n        this.props.getChallengers(form)\r\n    }\r\n    ViewCompetition = () => {\r\n        this.props.history.push('/competitor')\r\n    }\r\n    ViewChallenge = () => {\r\n        this.props.history.push('/challenge')\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    CompeteMode = () => this.props.history.push('/compete')\r\n\r\n    GoBack = () => { this.props.history.push(\"/studentmain\") }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBAnimation type=\"slideInDown\">\r\n                        <MDBRow center>\r\n                            <MDBCol size=\"8\">\r\n                                <h3>Compete with your friends!</h3>\r\n                                <hr />\r\n                                <img src={challenge} href=\"#\" onClick={this.CompeteMode} className=\"img-fluid\" alt=\"\" />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n                    <br />\r\n                    <MDBAnimation type=\"slideInDown\">\r\n                        <MDBRow>\r\n                            <MDBCol size=\"12\">\r\n                                <h3>My Competitors Request</h3>\r\n                                <hr />\r\n                                <Competitorlist navigate={this.ViewCompetition} myCompetitors={this.props.competitors} />\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n                    <MDBAnimation type=\"slideInUp\">\r\n                        <MDBRow>\r\n                            <MDBCol>\r\n                                <h3>My Challengers</h3>\r\n                                <hr />\r\n                                <Challengerlist navigate={this.ViewChallenge} myChallenger={this.props.challengers} />\r\n                            </MDBCol>\r\n\r\n\r\n                        </MDBRow>\r\n                        <MDBBtn color=\"red\" onClick={this.GoBack}> Back</MDBBtn>\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChallenger.propTypes = {\r\n    getMyCompetitors: PropTypes.func.isRequired,\r\n    getChallengers: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    competitors: state.game.competitors,\r\n    challengers: state.game.challengers\r\n});\r\nexport default connect(mapStateToProps, { getMyCompetitors, getChallengers })(Challenger)","import React, { Component } from 'react'\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nclass CompetitorDetail extends Component {\r\n    render() {\r\n        let details = this.props.student.map(x => {\r\n            return (\r\n                <MDBCard key={x.id} style={{ width: \"22rem\" }}>\r\n                    <MDBCardImage className=\"img-fluid\" src={x.picture} waves />\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>{x.name}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            Email: {x.email} <br />\r\n                Tutorial Group: {x.tutgrp}\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                {details}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CompetitorDetail","import React, { Component } from 'react'\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCol, MDBRow, MDBContainer, MDBCardText } from 'mdbreact';\r\n\r\nclass MyDetails extends Component {\r\n\r\n    render() {\r\n        const { student } = this.props\r\n        return (\r\n            <div>\r\n                {student && student.map(x => {\r\n                    return (\r\n                        <MDBCard key={x.id} style={{ width: \"22rem\" }}>\r\n                            <MDBCardImage className=\"img-fluid\" src={x.picture} waves />\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>{x.name}</MDBCardTitle>\r\n                                <MDBCardText>\r\n                                    Email: {x.email} <br />\r\n                Tutorial Group: {x.tutgrp}\r\n                                </MDBCardText>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MyDetails","import React, { Component } from 'react'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBInputGroup, MDBAnimation, MDBProgress } from \"mdbreact\"\r\nimport CompetitorDetail from '../components/challengerpage/CompetitorDetail'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentInfo, getCompeteMyInfo } from '../Redux/Actions/AuthAction'\r\nimport { sendComment, getCurrentUserScore, getCompetitorScore } from '../Redux/Actions/GameActions'\r\nimport MyDetails from '../components/challengerpage/MyDetails'\r\n\r\nclass Competitor extends Component {\r\n    state = {\r\n        studid: localStorage.getItem(\"compstudid\"),\r\n        compid: localStorage.getItem(\"compid\"),\r\n        tutid: localStorage.getItem(\"comptutid\"),\r\n        myldrid: localStorage.getItem(\"myldrid\"),\r\n        mystudid: localStorage.getItem(\"studid\"),\r\n        comment: ''\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.state)\r\n        this.getCompetitorDetails()\r\n        this.getCompetitorScoreBoard();\r\n        this.getMyScore();\r\n        this.getmyDetails();\r\n    }\r\n    getCompetitorDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n    getmyDetails() {\r\n        const form = {\r\n            id: this.state.mystudid\r\n        }\r\n        this.props.getCompeteMyInfo(form)\r\n    }\r\n    getCompetitorScoreBoard() {\r\n        const form = {\r\n            studid: this.state.studid,\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.getCompetitorScore(form)\r\n    }\r\n    getMyScore() {\r\n        const form = {\r\n            leaderboardid: this.state.myldrid\r\n        }\r\n        this.props.getCurrentUserScore(form)\r\n    }\r\n    SendComment = () => {\r\n        const form = {\r\n            compid: this.state.compid,\r\n            comment: this.state.comment\r\n        }\r\n        this.props.sendComment(form)\r\n        this.props.history.push('/challenger')\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    GoBack = () => {\r\n        this.props.history.push('/challenger')\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n\r\n\r\n    render() {\r\n        let myscore = this.props.myScore.map(x => parseInt(x.score))\r\n        let competitorscore = this.props.competitorscore.map(x => parseInt(x.score))\r\n        return (\r\n\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <MDBAnimation type=\"slideInLeft\">\r\n                        <br />\r\n                        <MDBRow>\r\n                            <MDBCol size=\"6\">\r\n                                <h3>My Details</h3>\r\n                                <hr />\r\n                                <br />\r\n                                <MyDetails student={this.props.currentUserInfo} />\r\n                                <br /><br />\r\n                                {this.props.myScore && this.props.myScore.map(x => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <br />\r\n                                            <h3>My Answer</h3>\r\n                                            <hr />\r\n                                            <img src={\"data:image/png;base64,\" + x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n                                            <br /> <br />\r\n                                            <h3>Competitors Scores</h3>\r\n                                            <hr />\r\n                                            <MDBRow>\r\n                                                <MDBCol size=\"9\">\r\n                                                    <MDBProgress value={x.score} className=\"my-2\" />\r\n                                                </MDBCol>\r\n                                                <MDBCol size=\"3\">\r\n                                                    Score: {x.score}\r\n                                                </MDBCol>\r\n                                            </MDBRow>\r\n                                            <h3>Professor's Comment to me</h3>\r\n                                            <hr />\r\n                                            <p>{(x.comment == '') ? \"No Comment\" : x.comment}</p>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                                )}\r\n                                <h3>Final Result</h3>\r\n                                <hr />\r\n                                {(myscore[0] < competitorscore[0]) ? <img src=\"https://media.esportsedition.com/wp-content/uploads/2016/07/losingstreak-1068x601.jpg\" className=\"img-fluid\" /> : <img src=\"https://i.ytimg.com/vi/8TwCwHHQ6a8/maxresdefault.jpg\" className=\"img-fluid\" />}\r\n                            </MDBCol>\r\n                            <MDBCol size=\"6\">\r\n                                <h3>Competitor Details</h3>\r\n                                <hr />\r\n                                <CompetitorDetail student={this.props.student} />\r\n                                <br />\r\n                                {this.props.competitorscore && this.props.competitorscore.map(x => {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <br />\r\n                                            <h3>Competitor's Answer</h3>\r\n                                            <hr />\r\n                                            <img src={\"data:image/png;base64,\" + x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n                                            <br /> <br />\r\n                                            <h3>Competitors Scores</h3>\r\n                                            <hr />\r\n                                            <MDBRow>\r\n                                                <MDBCol size=\"9\">\r\n                                                    <MDBProgress value={x.score} className=\"my-2\" />\r\n                                                </MDBCol>\r\n                                                <MDBCol size=\"3\">\r\n                                                    Score: {x.score}\r\n                                                </MDBCol>\r\n                                            </MDBRow>\r\n                                            <h3>Professor's Comment to Competitor</h3>\r\n                                            <hr />\r\n                                            <p>{x.comment}</p>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                                )}\r\n                                <br />\r\n                                <h3>Compose a message to your competitor</h3>\r\n                                <hr />\r\n                                <MDBInput id='comment' value={this.state.comment} label=\"Comment\" icon=\"comment\" onChange={this.handleChange}>\r\n                                </MDBInput>\r\n                                <MDBBtn\r\n                                    onClick={this.SendComment}\r\n                                    color=\"blue\"\r\n                                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                    Send Message\r\n                            </MDBBtn>\r\n                                <MDBBtn\r\n                                    onClick={this.GoBack}\r\n                                    color=\"red\"\r\n                                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                    Back\r\n                            </MDBBtn>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nCompetitor.Proptypes = {\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    sendComment: Proptypes.func.isRequired,\r\n    getCurrentUserScore: Proptypes.func.isRequired,\r\n    getCompetitorScore: Proptypes.func.isRequired,\r\n    getCompeteMyInfo: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.studentinfo,\r\n    myScore: state.game.myscore,\r\n    competitorscore: state.game.competitor,\r\n    currentUserInfo: state.auth.myInfo\r\n})\r\nexport default connect(mapStateToProps, { getStudentInfo, sendComment, getCurrentUserScore, getCompetitorScore, getCompeteMyInfo })(Competitor)","import React, { Component } from 'react'\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\n\r\nclass ChallengerDetail extends Component {\r\n    render() {\r\n        let details = this.props.student.map(x => {\r\n            return (\r\n                <MDBCard key={x.id} style={{ width: \"22rem\" }}>\r\n                    <MDBCardImage className=\"img-fluid\" src={x.picture} waves />\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>{x.name}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            Email: {x.email} <br />\r\n                Tutorial Group: {x.tutgrp}\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                {details}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ChallengerDetail","import React, { Component } from 'react'\r\nimport ChallengerDetail from '../components/challengerpage/ChallengerDetail'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentInfo, getCompeteMyInfo } from '../Redux/Actions/AuthAction'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBProgress } from \"mdbreact\"\r\nimport { getComment, getCurrentUserScore, getCompetitorScore } from '../Redux/Actions/GameActions'\r\nimport MyDetails from '../components/challengerpage/MyDetails'\r\n\r\nclass Challenge extends Component {\r\n    state = {\r\n        studid: localStorage.getItem(\"mystudid\"),\r\n        compid: localStorage.getItem(\"compid\"),\r\n        tutid: localStorage.getItem(\"comptutid\"),\r\n        myldrid: localStorage.getItem(\"oppldrid\"),\r\n        challengerid: localStorage.getItem(\"challengerid\")\r\n    }\r\n    componentDidMount() {\r\n        this.getCompetitorDetails()\r\n        this.retrieveComment()\r\n        this.getMyScoreBoard()\r\n        this.getOppScore()\r\n        this.getmyDetails()\r\n    }\r\n    retrieveComment() {\r\n        const form = {\r\n            compid: this.state.compid\r\n        }\r\n        this.props.getComment(form)\r\n    }\r\n    getCompetitorDetails() {\r\n        const form = {\r\n            id: this.state.challengerid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n    getmyDetails() {\r\n        const form = {\r\n            id: localStorage.getItem(\"studid\")\r\n        }\r\n        this.props.getCompeteMyInfo(form)\r\n    }\r\n    getMyScoreBoard() {\r\n        const form = {\r\n            studid: this.state.studid,\r\n            tutid: this.state.tutid\r\n        }\r\n        console.log(form)\r\n        //Call Same function coz it's the opposite of competitor\r\n        this.props.getCompetitorScore(form)\r\n    }\r\n    getOppScore() {\r\n        const form = {\r\n            leaderboardid: this.state.myldrid\r\n        }\r\n        //Call Same function coz it's the opposite of competitor\r\n        this.props.getCurrentUserScore(form)\r\n    }\r\n    GoBack = () => {\r\n        this.props.history.push('/challenger')\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    render() {\r\n        let myscore = this.props.competitorscore.map(x => parseInt(x.score))\r\n        let competitorscore = this.props.challengerScore.map(x => parseInt(x.score))\r\n\r\n        let comment = this.props.challengecomment.map(x => x.competitormsg)\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>My Details</h3>\r\n                            <hr />\r\n                            <MyDetails student={this.props.currentUserInfo} />\r\n                            <br /><br />\r\n                            {this.props.competitorscore && this.props.competitorscore.map(x => {\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <br />\r\n                                        <h3>My Answer</h3>\r\n                                        <hr />\r\n                                        <img src={\"data:image/png;base64,\" + x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n                                        <br /> <br />\r\n                                        <h3>Competitors Scores</h3>\r\n                                        <hr />\r\n                                        <MDBRow>\r\n                                            <MDBCol size=\"9\">\r\n                                                <MDBProgress value={x.score} className=\"my-2\" />\r\n                                            </MDBCol>\r\n                                            <MDBCol size=\"3\">\r\n                                                Score: {x.score}\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <h3>Professor's Comment to me</h3>\r\n                                        <hr />\r\n                                        <p>{(x.comment == '') ? \"No Comment\" : x.comment}</p>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                            )}\r\n                            <h3>Final Result</h3>\r\n                            <hr />\r\n                            {(myscore[0] < competitorscore[0]) ? <img src=\"https://media.esportsedition.com/wp-content/uploads/2016/07/losingstreak-1068x601.jpg\" className=\"img-fluid\" /> : <img src=\"https://i.ytimg.com/vi/8TwCwHHQ6a8/maxresdefault.jpg\" className=\"img-fluid\" />}\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>Challenger Detail</h3>\r\n                            <hr />\r\n                            <ChallengerDetail student={this.props.student} />\r\n                            <br />\r\n                            {this.props.challengerScore && this.props.challengerScore.map(x => {\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <br />\r\n                                        <h3>Competitor's Answer</h3>\r\n                                        <hr />\r\n                                        <img src={\"data:image/png;base64,\" + x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n                                        <br /> <br />\r\n                                        <h3>Competitors Scores</h3>\r\n                                        <hr />\r\n                                        <MDBRow>\r\n                                            <MDBCol size=\"9\">\r\n                                                <MDBProgress value={x.score} className=\"my-2\" />\r\n                                            </MDBCol>\r\n                                            <MDBCol size=\"3\">\r\n                                                Score: {x.score}\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <h3>Professor's Comment to Competitor</h3>\r\n                                        <hr />\r\n                                        <p>{x.comment}</p>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                            )}\r\n                            <h3>Challenger Message to you</h3>\r\n                            <hr />\r\n                            <MDBInput disabled value={comment} label=\"Comment\" icon=\"comment\" onChange={this.handleChange}>\r\n                            </MDBInput>\r\n                            <MDBBtn\r\n                                onClick={this.GoBack}\r\n                                color=\"red\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Back\r\n                            </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChallenge.Proptypes = {\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    getComment: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.studentinfo,\r\n    challengecomment: state.game.comment,\r\n    challengerScore: state.game.myscore,\r\n    competitorscore: state.game.competitor,\r\n    currentUserInfo: state.auth.myInfo\r\n})\r\nexport default connect(mapStateToProps, { getStudentInfo, getCompeteMyInfo, getComment, getCompetitorScore, getCurrentUserScore })(Challenge)","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst StudentCard = ({ studname, profilepic, studemail, studtutgrp }) => {\r\n  return (\r\n    <div>\r\n       <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profilepic} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{studname}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {studemail} <br />\r\n                Tutorial Group: {studtutgrp}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentCard;","import { MDBCol, MDBContainer, MDBRow, MDBInput, MDBBtn } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport StudentCard from '../components/mysubmissionpage/StudentCard'\r\nimport Footer from '../components/share/Footer'\r\nimport Navbar from '../components/share/Navbar'\r\nimport { getStudentSubmission } from '../Redux/Actions/GameActions'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\n\r\nclass MySubmission extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        email: localStorage.getItem(\"email\"),\r\n        picture: localStorage.getItem(\"picture\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        fbid: localStorage.getItem(\"fbid\"),\r\n        ldrid: this.props.match.params.id,\r\n    }\r\n    componentDidMount() {\r\n        this.getLeaderBoardSubmission()\r\n    }\r\n    getLeaderBoardSubmission() {\r\n        const form = {\r\n            id: this.state.ldrid\r\n        }\r\n        this.props.getStudentSubmission(form)\r\n    }\r\n    NotLoggedIn = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    GoBack = () => this.props.history.push('/studentmain')\r\n    render() {\r\n        let ProfComment = this.props.studSubmission.map(x => {\r\n            return (\r\n                <React.Fragment>\r\n                    <MDBInput label=\"Score\" icon=\"star\" disabled value={x.score} />\r\n                    <MDBInput label=\"Comment\" icon=\"comment\" disabled value={x.comment} />\r\n                </React.Fragment>\r\n            )\r\n        })\r\n        let answer = this.props.studSubmission.map(x => <img className=\"img-fluid\" src={x.image} alt=\"\" />)\r\n        return (\r\n            <div>\r\n                <Navbar validateLogin={this.NotLoggedIn} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>My Details</h3>\r\n                            <hr />\r\n                            <StudentCard profilepic={this.state.picture} studname={this.state.name} studemail={this.state.email} studtutgrp={this.state.tutgrp} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>Professor Comments</h3>\r\n                            <hr />\r\n                            {ProfComment}\r\n                            <MDBBtn color=\"red\" onClick={this.GoBack} size=\"sm\">Back</MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>My Answer</h3>\r\n                            <hr />\r\n                            {answer}\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <h3>Standard Answer</h3>\r\n                            <hr />\r\n                            <img src=\"#\" alt=\"\" />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nMySubmission.Proptypes = {\r\n    getStudentSubmission: Proptypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    studSubmission: state.game.submission\r\n})\r\n\r\nexport default connect(mapStateToProps, { getStudentSubmission })(MySubmission)\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Question from '../pages/Question';\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Assignment from '../pages/Assignment';\r\nimport Logout from '../pages/Logout';\r\nimport Marking from '../pages/Marking';\r\nimport MarkingHome from '../pages/MarkingHome';\r\nimport StudentSelect from '../pages/StudentSelect';\r\nimport StudentMain from '../pages/StudentMain';\r\nimport StudentProfile from '../pages/StudentProfile';\r\nimport ProfessorProfile from '../pages/ProfessorProfile';\r\nimport StudentNews from '../pages/StudentNews';\r\nimport Compete from '../pages/Compete';\r\nimport Challenger from '../pages/Challenger';\r\nimport Competitor from '../pages/Competitor';\r\nimport Challenge from '../pages/Challenge';\r\nimport MySubmission from '../pages/MySubmission';\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Login} />\r\n        <Route path='/home' component={Home} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/question/:tutid' component={Question} />\r\n        <Route path='/assignment' component={Assignment} />\r\n        <Route path='/seltut' component={MarkingHome} />\r\n        <Route path='/student/:tutid' component={StudentSelect} />\r\n        <Route path='/marking/:id/:studid' component={Marking} />\r\n        <Route path='/logout' component={Logout} />\r\n        <Route path='/studentmain' component={StudentMain} />\r\n        <Route path='/studentprofile' component={StudentProfile} />\r\n        <Route path='/professorprofile' component={ProfessorProfile} />\r\n        <Route path='/studentnews' component={StudentNews} />\r\n        <Route path='/compete' component={Compete} />\r\n        <Route path='/challenger' component={Challenger} />\r\n        <Route path='/competitor' component={Competitor} />\r\n        <Route path='/submission/:id' component={MySubmission} />\r\n        <Route path='/challenge' component={Challenge} />\r\n        \r\n        <Route render={() => <h1>Not Found</h1>} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n    login: [],\r\n    status: [],\r\n    studentinfo: [],\r\n    profinfo: [],\r\n    emailcheck: [],\r\n    myInfo: []\r\n};\r\n\r\nconst AuthReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FACEBOOK_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'EMAIL_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'REGISTER_USER':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'TESTING':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'GET_STUDENT_DETAILS':\r\n            return {\r\n                ...state,\r\n                studentinfo: action.payload\r\n            }\r\n        case 'GET_MY_DETAILS':\r\n            return {\r\n                ...state,\r\n                myInfo: action.payload\r\n            }\r\n        case 'GET_PROF_DETAILS':\r\n            return {\r\n                ...state,\r\n                profinfo: action.payload\r\n            }\r\n        case 'UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'FACEBOOK_ACCOUNT_LINK':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'EMAIL_CHECK':\r\n            return {\r\n                ...state,\r\n                emailcheck: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AuthReducers;\r\n","const initState = {\r\n    items: [],\r\n};\r\n\r\nconst TwitterReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_POST':\r\n            return{\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TwitterReducers;\r\n","const initState = {\r\n    records: [],\r\n    studentlist: [],\r\n    submission: [],\r\n    completedtut: [],\r\n    status: [],\r\n    competitors: [],\r\n    challengers: [],\r\n    comment: [],\r\n    competitor: [],\r\n    myscore: []\r\n};\r\n\r\nconst GameReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_LEADERBOARD':\r\n            return {\r\n                ...state,\r\n                records: action.payload\r\n            }\r\n        case 'GET_STUDENT_LIST':\r\n            return {\r\n                ...state,\r\n                studentlist: action.payload\r\n            }\r\n        case 'GET_STUDENT_SUBMISSION':\r\n            return {\r\n                ...state,\r\n                submission: action.payload\r\n            }\r\n        case 'UPDATE_SCORES':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'MY_COMPLETED_TUT':\r\n            return {\r\n                ...state,\r\n                completedtut: action.payload\r\n            }\r\n        case 'SEND_COMPETE_REQUEST':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'GET_CHALLENGERS':\r\n            return {\r\n                ...state,\r\n                challengers: action.payload\r\n            }\r\n        case 'GET_COMPETITORS':\r\n            return {\r\n                ...state,\r\n                competitors: action.payload\r\n            }\r\n        case 'SEND_COMMENT':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'GET_COMMENT':\r\n            return {\r\n                ...state,\r\n                comment: action.payload\r\n            }\r\n        case 'GET_MY_SCORE':\r\n            return {\r\n                ...state,\r\n                myscore: action.payload\r\n            }\r\n        case 'GET_COMPETITOR_SCORE':\r\n            return {\r\n                ...state,\r\n                competitor: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default GameReducers;\r\n","const initState = {\r\n    tutorialgrp: [],\r\n    status: false\r\n};\r\n\r\nconst TutorialReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: [...state.tutorialgrp, ...action.payload],\r\n            }\r\n        case 'DELETE_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: state.tutorialgrp.filter(x => x.tutid !== action.tutid)\r\n            }\r\n        case 'FETCH_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: action.payload\r\n            }\r\n        case 'FETCH_USER_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: action.payload\r\n            }\r\n        case 'FETCH_PROF_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TutorialReducers;\r\n","const initState = {\r\n    questions: [],\r\n    tutquestions: []\r\n};\r\n\r\nconst QuestReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_ALL_QUESTION':\r\n            return {\r\n                ...state,\r\n                questions: action.payload\r\n            }\r\n        case 'SHOW_TUT_QUESTION':\r\n            return {\r\n                ...state,\r\n                tutquestions: action.payload\r\n            }\r\n        case 'REMOVE_QUESTION':\r\n            return {\r\n                ...state,\r\n                tutquestions: state.tutquestions.filter(x => x.questid !== action.payload)\r\n            }\r\n        case 'ADD_QUESTION':\r\n            return {\r\n                ...state,\r\n                tutquestions: [...state.tutquestions, ...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default QuestReducers;\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducers from './AuthReducers';\r\nimport TwitterReducers from './TwitterReducers'\r\nimport GameReducers from './GameReducers'\r\nimport TutorialReducers from './TutorialReducers';\r\nimport QuestReducers from './QuestReducers';\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n    twitter: TwitterReducers,\r\n    auth: AuthReducers,\r\n    game: GameReducers,\r\n    tutorial: TutorialReducers,\r\n    quest: QuestReducers\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n  render() {\r\n\r\n    const { collapseID } = this.state;\r\n    return (\r\n      <Provider store={Store}>\r\n        <Router>\r\n          <div className='flyout'>\r\n            {collapseID && overlay}\r\n            <main style={{ marginTop: '4rem' }}>\r\n              <Routes />\r\n            </main>  \r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}