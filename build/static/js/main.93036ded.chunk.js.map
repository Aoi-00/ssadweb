{"version":3,"sources":["assets/logo.svg","components/QuestionList.jsx","components/AddQuestion.jsx","Redux/Actions/AuthAction.jsx","pages/Question.jsx","Redux/Actions/QuestActions.jsx","components/LeaderBoard.jsx","pages/Home.jsx","Redux/Actions/TwitterAction.jsx","Redux/Actions/GameActions.jsx","components/LoginForm.jsx","pages/Login.jsx","components/RegisterForm.jsx","pages/Register.jsx","components/TutorialTable.jsx","Redux/Actions/TutorialAction.jsx","components/AddTutorial.jsx","pages/Tutorial.jsx","pages/Logout.jsx","pages/Marking.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/TwitterReducers.jsx","Redux/Reducers/GameReducers.jsx","Redux/Reducers/TutorialReducers.jsx","Redux/Reducers/QuestReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","components/Navbar.jsx","components/Footer.jsx","App.js","registerServiceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","cx","cy","r","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","id","ForwardRef","Basic","question","onDelete","e","React","useState","columns","label","field","width","attributes","sort","rows","datatable","map","data","index","push","questionnumber","remove","size","color","onClick","questid","hover","entriesOptions","entries","pagesAmount","searchTop","pagingTop","searchBottom","AddQuestion","Component","state","UserSubmitQuestion","addQuest","handleChange","setState","value","render","className","icon","group","type","validate","error","success","onChange","connect","status","auth","testCall","postData","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","payload","Question","tutid","match","params","getQuestions","form","tutgrp","showQuestion","getTutGrp","tutquestion","toString","post","addQuestion","componentDidMount","quest","questions","deleteQuestion","Pagination","leaderboard","x","name","picture","src","image","height","alt","date","score","view","to","fullPagination","Home","fetchLeaderboard","fetchPosts","console","log","localStorage","getItem","twitter","items","game","records","LoginForm","email","userpassword","fbid","fblogin","emaillogin","toggleCollapse","collapseID","prevState","EmailLogin","password","emailLogin","responseFacebook","response","FbLogin","facebookLogin","componentWillReceiveProps","nextProps","setItem","loginstatus","usertype","Navigate","alert","delay","outline","md","xl","iconClass","appId","autoLoad","fields","cssClass","callback","login","Login","val","history","RegisterForm","cfmpassword","fbimage","fbdetails","url","handleSelectList","Validate","Register","registerUser","registerstatus","Fragment","textButton","TutorialTable","tutorial","navigate","deleteTut","striped","tutname","createdby","ViewTutorial","addTutorial","AddTutorial","tutGroup","tutName","difficulty","coins","onSubmit","addTut","getValue","htmlFor","min","max","Tutorial","DelTutorial","deleteTutorial","showTutorials","tutorialtable","tutorialgrp","Logout","clear","Marking","Routes","exact","path","component","initState","AuthReducers","action","TwitterReducers","GameReducers","TutorialReducers","filter","QuestReducers","RootReducer","combineReducers","middleWare","thunk","store","createStore","applyMiddleware","Navbar","closeCollapse","collID","window","scrollTo","dark","expand","fixed","scrolling","href","style","isOpen","navbar","right","Footer","Date","getFullYear","App","Store","overlay","marginTop","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.93036ded.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  let title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect} from 'react';\r\nimport { MDBDataTableV5, MDBBtn } from 'mdbreact';\r\n\r\nexport default function Basic({question}){\r\n\r\n  const onDelete = (e) => {\r\n    //datatable.filter()\r\n    //console.log({datatable})\r\n  };\r\n  const [datatable, setDatatable] = React.useState({\r\n    \r\n    columns: [\r\n      {\r\n        label: '#',\r\n        field: 'questionnumber',\r\n        width: 270,\r\n      },\r\n      {\r\n        label: 'Question',\r\n        field: 'question',\r\n        width: 750,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        field: 'remove',\r\n        sort: 'disabled',\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: []\r\n  });\r\n  question.map((data, index) => datatable.rows.push({\r\n    questionnumber: index+1,\r\n    question: data.question,\r\n    remove: [<MDBBtn key={data.questid} size=\"sm\" color=\"red\" onClick={onDelete}>Remove</MDBBtn>],\r\n  }))\r\n  \r\n  return <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} searchTop pagingTop searchBottom={false} data={datatable} />;\r\n}","import React, { Component } from 'react'\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { testCall } from '../Redux/Actions/AuthAction'\r\n\r\nclass AddQuestion extends Component {\r\n    state = {\r\n        question: '',\r\n    }\r\n    UserSubmitQuestion = () => {\r\n        //Fire method from parent component [Question.jsx]\r\n        this.props.addQuest(this.state.question);\r\n    }\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput label=\"Enter Question\" id='question' icon=\"question\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.UserSubmitQuestion}>Submit</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.auth.status\r\n});\r\n\r\nexport default connect(mapStateToProps, { testCall })(AddQuestion)\r\n","export const emailLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'EMAIL_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const facebookLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/fblogin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FACEBOOK_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const registerUser = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REGISTER_USER',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const testCall = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/test', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'TESTING',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport QuestionList from '../components/QuestionList'\r\nimport AddQuestion from '../components/AddQuestion';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showQuestion, addQuestion, deleteQuestion } from '../Redux/Actions/QuestActions'\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        tutid: this.props.match.params.id,\r\n    };\r\n    getQuestions = () =>{\r\n        const form = {\r\n            tutid: this.state.tutid,\r\n            tutgrp: ''\r\n        }\r\n        this.props.showQuestion(form);\r\n    }\r\n    componentDidMount() {\r\n        this.getQuestions()\r\n    }\r\n    getTutGrp = () => {\r\n        return this.props.tutquestion[0].tutgrp.toString()\r\n    }\r\n    AddQuestion = (question) => {\r\n        //Send Data to DB\r\n        //Why we do it here, coz here is the main control for the data manipulation\r\n        //As long we update here, data in different will be updated accordingly\r\n        const post = {\r\n            question: question,\r\n            tutgrp: this.getTutGrp(),\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.addQuestion(post)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol size=\"12\">\r\n                    <br/>\r\n                    <h2>List of questions</h2>\r\n                    <hr/>\r\n                        <QuestionList question={this.props.tutquestion} />\r\n                    </MDBCol>\r\n                    <MDBCol size=\"12\">\r\n                    <h2>Add new question</h2>\r\n                    <hr/>\r\n                        <AddQuestion addQuest={this.AddQuestion} />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nQuestion.propTypes = {\r\n    showQuestion: PropTypes.func.isRequired,\r\n    addQuestion: PropTypes.func.isRequired,\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tutquestion: state.quest.questions,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {showQuestion , addQuestion, deleteQuestion})(Question)","export const addQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REMOVE_QUESTION',\r\n            payload: postData.questid\r\n        })\r\n        );\r\n}\r\n\r\nexport const showQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/show/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SHOW_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from 'react';\r\nimport { MDBDataTableV5, MDBLink, MDBIcon } from 'mdbreact';\r\n\r\nexport default function Pagination({ leaderboard }) {\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: [\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Image',\r\n        field: 'picture',\r\n        sort: 'disabled',\r\n        width: 270,\r\n      },\r\n      {\r\n        label: 'Date submitted',\r\n        field: 'date',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Score',\r\n        field: 'score',\r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'View',\r\n        field: 'view',\r\n        sort: 'disabled',\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n\r\n  leaderboard.map(x => datatable.rows.push({ name: x.name, picture: [<img src={x.image} width=\"270\" height=\"200\" alt=\"\" />], date: x.date, score: x.score, view: [<MDBLink to={\"/record/\" + x.id}><MDBIcon className=\"red-text\" icon=\"caret-right\" size=\"3x\" className=\"mr-1\" /></MDBLink>] }))\r\n\r\n\r\n\r\n  return <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable} fullPagination />;\r\n}","import React, { Component } from 'react'\r\nimport Card from '../components/Card'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { fetchLeaderboard } from '../Redux/Actions/GameActions'\r\nimport LeaderBoard from '../components/LeaderBoard'\r\n\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchLeaderboard();\r\n        this.props.fetchPosts();\r\n        console.log(localStorage.getItem(\"email\"))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBContainer>\r\n                    <br />\r\n                    <h2>LeaderBoard</h2>\r\n                    <hr />\r\n                    <LeaderBoard leaderboard={this.props.leaderboard} />\r\n                    <br />\r\n                </MDBContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nHome.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    fetchLeaderboard: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n    leaderboard: state.game.records\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchLeaderboard })(Home)\r\n","export const fetchPosts = () => dispatch => {\r\n    fetch('https://breadplaza.com/api/public/index.php/api/ntusg')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_POST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n","export const fetchLeaderboard = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/leaderboard')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_LEADERBOARD',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"./css/index.css\";\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { emailLogin, facebookLogin } from '../Redux/Actions/AuthAction'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    email: '',\r\n    userpassword: '',\r\n    fbid: '',\r\n    fblogin: false,\r\n    emaillogin: false\r\n  };\r\n\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  EmailLogin = () => {\r\n    const post = {\r\n      email: this.state.email,\r\n      password: this.state.userpassword\r\n    }\r\n    this.setState({ emaillogin: true })\r\n    this.props.emailLogin(post);\r\n  }\r\n  responseFacebook = (response) => {\r\n    this.setState({\r\n      fbid: response.id,\r\n      fblogin: true\r\n    })\r\n    this.FbLogin(response.id)\r\n  }\r\n  FbLogin = (id) => {\r\n    const post = {\r\n      fbid: id\r\n    }\r\n    this.props.facebookLogin(post);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if(this.state.fblogin){\r\n      localStorage.setItem(\"fbid\", nextProps.loginstatus[0].fbid)\r\n      localStorage.setItem(\"name\", nextProps.loginstatus[0].name)\r\n      localStorage.setItem(\"email\", nextProps.loginstatus[0].email)\r\n      localStorage.setItem(\"usertype\", nextProps.loginstatus[0].usertype)\r\n      this.props.Navigate(\"/home\")\r\n    }\r\n    else if (this.state.emaillogin) {\r\n      localStorage.setItem(\"fbid\", nextProps.loginstatus[0].fbid)\r\n      localStorage.setItem(\"name\", nextProps.loginstatus[0].name)\r\n      localStorage.setItem(\"email\", nextProps.loginstatus[0].email)\r\n      localStorage.setItem(\"usertype\", nextProps.loginstatus[0].usertype)\r\n      this.props.Navigate(\"/home\")\r\n    }\r\n    else {\r\n      alert(\"Wrong email or password\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Sign up right now!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Don't have an account? Register here!\r\n                  </h6>\r\n                  <MDBNavLink to='/register'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Register\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Login:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"userpassword\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn color=\"white\" onClick={this.EmailLogin}>Login</MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"438326617514737\"\r\n                            autoLoad={true}\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n\r\n                          <hr className=\"hr-light\" />\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  emailLogin: PropTypes.func.isRequired,\r\n  facebookLogin: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loginstatus: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { emailLogin, facebookLogin })(LoginForm);","import React, { Component } from 'react'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\n class Login extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    componentDidMount(){\r\n        console.log(localStorage.getItem(\"email\"))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <LoginForm Navigate={this.Navigate}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"./css/index.css\";\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport PropTypes from 'prop-types'\r\nimport { registerUser } from '../Redux/Actions/AuthAction'\r\nimport { connect } from 'react-redux'\r\n\r\nclass RegisterForm extends React.Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cfmpassword: \"\",\r\n    usertype: \"Student\",\r\n    name: \"\",\r\n    fbimage: \"\",\r\n    fbid: \"\",\r\n    tutgrp: \"TS1\",\r\n    fbdetails: false\r\n  };\r\n\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response)\r\n    this.setState({\r\n      fbid: response.id,\r\n      fbimage: response.picture.data.url,\r\n      email: response.email,\r\n      name: response.name,\r\n      fbdetails: true\r\n    })\r\n  }\r\n  handleSelectList = (e) => {\r\n    this.setState({\r\n      tutgrp: e.target.value\r\n    })\r\n  }\r\n  Validate = () => {\r\n    this.Register();\r\n  }\r\n  Register = () => {\r\n    const form = {\r\n      fbid: this.state.fbid,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      usertype: \"Student\",\r\n      tutgrp: this.state.tutgrp\r\n    }\r\n    this.props.registerUser(form);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    var response = nextProps.registerstatus[0].response;\r\n    if(response == \"User Registered\"){\r\n      this.props.Navigate(\"/\")\r\n    }\r\n    else{\r\n      //Do some animation here\r\n      alert(\"Register Error\")\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let fbimage = (!this.state.fbdetails) ? <React.Fragment /> : <center> <img width=\"150\" height=\"150\" src={this.state.fbimage} className=\"img-fluid z-depth-1 rounded-circle\" alt=\"\" /></center>\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Thank you for joining us!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Already have an account? Click the button below to go back\r\n                  </h6>\r\n                  <MDBNavLink to='/'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Login\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Register:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        {fbimage}\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Full Name\"\r\n                          icon=\"address-card\"\r\n                          id=\"name\"\r\n                          type=\"text\"\r\n                          value={this.state.name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Confirm Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"cfmpassword\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <select onChange={this.handleSelectList} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                          <option value={'TS1'}>TS1</option>\r\n                          <option value={'TS2'}>TS2</option>\r\n                          <option value={'TS3'}>TS3</option>\r\n                          <option value={'TS4'}>TS4</option>\r\n                        </select>\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn onClick={this.Validate} color=\"white\">Register</MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"438326617514737\"\r\n                            autoLoad={true}\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            textButton=\"Facebook Register\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  registerstatus: state.auth.status\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(RegisterForm);","import React, { Component } from 'react'\r\nimport RegisterForm from '../components/RegisterForm'\r\n\r\nclass Register extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RegisterForm Navigate={this.Navigate}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register","import React, { useEffect, useState } from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBLink } from 'mdbreact';\r\n\r\nconst TutorialTable = ({ tutorial, navigate, deleteTut }) => {\r\n  let onDelete = (tutid) => {\r\n    deleteTut(tutid)\r\n  }\r\n  let ViewTutorial = (tutid) => {\r\n    navigate(tutid)\r\n  }\r\n  return (\r\n    <MDBTable striped>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Tutorial Name</th>\r\n          <th>Tutorial Group</th>\r\n          <th>Created by</th>\r\n          <th>Remove</th>\r\n          <th>View</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {tutorial && tutorial.map(x => {\r\n          return (\r\n            <tr key={x.tutid}>\r\n              <td>{x.tutname}</td>\r\n              <td>{x.tutgrp}</td>\r\n              <td>{x.createdby}</td>\r\n              <td><MDBBtn size=\"sm\" color=\"red\" onClick={() => onDelete(x.tutid)}>Remove</MDBBtn></td>\r\n              <td><MDBBtn size=\"sm\" color=\"blue\" onClick={() => ViewTutorial(x.tutid)}> View </MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default TutorialTable;","export const addTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'DELETE_TUTORIAL',\r\n            payload: data,\r\n            tutid: postData.tutid\r\n        })\r\n        );\r\n}\r\nexport const showTutorials = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/tutlist')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React, { Component } from 'react'\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { addTutorial } from '../Redux/Actions/TutorialAction'\r\n\r\nclass AddTutorial extends Component {\r\n    state = {\r\n        tutGroup: '',\r\n        tutName: '',\r\n        createdby: localStorage.getItem(\"name\"),\r\n        difficulty: 'Easy',\r\n        coins: 50\r\n    }\r\n    onSubmit = () => {\r\n        const post = {\r\n            tutname: this.state.tutName,\r\n            tutgrp: this.state.tutGroup,\r\n            createdby: this.state.createdby,\r\n            difficulty: this.state.difficulty,\r\n            coins: this.state.coins\r\n        }\r\n        this.props.addTut(post);\r\n    }\r\n    handleChange = (e) => { //to handle change in inputs\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    getValue = (e) => {\r\n        this.setState({\r\n            coins: e.target.value\r\n        })\r\n    }\r\n    handleSelectList = (e) => {\r\n        this.setState({difficulty: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput label=\"Enter Tutorial Group\" id='tutGroup' onChange={this.handleChange} icon=\"user-plus\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                        <MDBInput label=\"Enter Tutorial Name\" id='tutName' onChange={this.handleChange} icon=\"user-alt\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                    </div>\r\n                    <label htmlFor=\"difficulty\">Difficulty Level</label>\r\n                    <select onChange={this.handleSelectList} value={this.state.difficulty} id=\"diffuculty\" className=\"browser-default custom-select\">\r\n                        <option value={'Easy'}>Easy</option>\r\n                        <option value={'Medium'}>Medium</option>\r\n                        <option value={'Hard'}>Hard</option>\r\n                    </select>\r\n                    <br/><br/>\r\n                    <label htmlFor=\"coins\">Number of coins: {this.state.coins}</label>\r\n                    <input type=\"range\" id=\"coins\" onChange={this.getValue} min=\"0\" max=\"100\" className=\"custom-range\" />\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.onSubmit}>Submit</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    status: state.auth.status //state.tut.status?\r\n});\r\n\r\nexport default connect(mapStateToProps, { addTutorial })(AddTutorial) //to be changed","\r\nimport React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport TutorialTable from '../components/TutorialTable'\r\nimport AddTutorial from '../components/AddTutorial'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showTutorials, deleteTutorial, addTutorial } from '../Redux/Actions/TutorialAction'\r\n\r\nclass Tutorial extends Component {\r\n    componentDidMount() {\r\n        this.props.showTutorials();\r\n    }\r\n    Navigate = (tutid) => {\r\n        this.props.history.push('/question/' + tutid)\r\n    }\r\n    DelTutorial = (tutid) => {\r\n        const form = {\r\n            tutid: tutid\r\n        }\r\n        this.props.deleteTutorial(form)\r\n    }\r\n    AddTutorial = (form) => {\r\n        this.props.addTutorial(form);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol>\r\n                        <h2>Tutorial Grouping</h2>\r\n                        <TutorialTable deleteTut={this.DelTutorial} navigate={this.Navigate} tutorial={this.props.tutorialtable} />\r\n                        <br />\r\n                        <h3>Add New Tutorial Grouping</h3>\r\n                        <AddTutorial addTut={this.AddTutorial} />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nTutorial.propTypes = {\r\n    showTutorials: PropTypes.func.isRequired,\r\n    deleteTutorial: PropTypes.func.isRequired,\r\n    addTutorial: PropTypes.func.isRequired\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    tutorialtable: state.tutorial.tutorialgrp,\r\n});\r\n\r\n// connection this component to database.\r\nexport default connect(mapStateToProps, { showTutorials, deleteTutorial, addTutorial })(Tutorial)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Marking extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Marking","import React from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\n\r\nimport Question from '../pages/Question';\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Tutorial from '../pages/Tutorial';\r\nimport Logout from '../pages/Logout';\r\nimport Marking from '../pages/Marking';\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Login} />\r\n        <Route path='/home' component={Home} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/question/:id' component={Question} />\r\n        <Route path='/tutorial' component={Tutorial} />\r\n        <Route path='/marking' component={Marking} />\r\n        <Route path='/logout' component={Logout} />\r\n        <Route\r\n          render={() => <h1>Not Found</h1>}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n    login: [],\r\n    status: []\r\n};\r\n\r\nconst AuthReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FACEBOOK_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'EMAIL_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'REGISTER_USER':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'TESTING':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AuthReducers;\r\n","const initState = {\r\n    items: [],\r\n};\r\n\r\nconst TwitterReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_POST':\r\n            return{\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TwitterReducers;\r\n","const initState = {\r\n    records: [],\r\n};\r\n\r\nconst GameReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_LEADERBOARD':\r\n            return{\r\n                ...state,\r\n                records: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default GameReducers;\r\n","const initState = {\r\n    tutorialgrp: [],\r\n};\r\n\r\nconst TutorialReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: [...state.tutorialgrp, ...action.payload]\r\n            }\r\n        case 'DELETE_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: state.tutorialgrp.filter(x => x.tutid !== action.tutid)\r\n            }\r\n        case 'FETCH_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TutorialReducers;\r\n","const initState = {\r\n    questions: []\r\n};\r\n\r\nconst QuestReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_QUESTION':\r\n            return {\r\n                ...state,\r\n                questions: [...state.questions, ...action.payload]\r\n            }\r\n        case 'REMOVE_QUESTION':\r\n            return {\r\n                ...state,\r\n                status: state.questions.filter(x => x.questid !== action.payload)\r\n            }\r\n        case 'ADD_QUESTION':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default QuestReducers;\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducers from './AuthReducers';\r\nimport TwitterReducers from './TwitterReducers'\r\nimport GameReducers from './GameReducers'\r\nimport TutorialReducers from './TutorialReducers';\r\nimport QuestReducers from './QuestReducers';\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n    twitter: TwitterReducers,\r\n    auth: AuthReducers,\r\n    game: GameReducers,\r\n    tutorial: TutorialReducers,\r\n    quest: QuestReducers\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink } from 'mdbreact';\r\nimport { ReactComponent as Logo } from '../assets/logo.svg';\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: ''\r\n    };\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        return (\r\n\r\n            <div>\r\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                        <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                        <strong className='align-middle'>SSAD Project</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='/home'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Home</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/tutorial'\r\n                                >\r\n                                    <strong>Tutorial</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/marking'\r\n                                >\r\n                                    <strong>Marking</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Logout</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react'\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='indigo'>\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='https://www.MDBootstrap.com'> MDBootstrap.com </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ReactComponent as Logo } from './assets/logo.svg';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n\r\n  render() {\r\n  \r\n    const { collapseID } = this.state;\r\n\r\n    return (\r\n      <Provider store={Store}>\r\n        <Router>\r\n          <Navbar />\r\n          <div className='flyout'>\r\n            {collapseID && overlay}\r\n            <main style={{ marginTop: '4rem' }}>\r\n              <Routes />\r\n            </main>  \r\n          </div>\r\n          <Footer />\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}