{"version":3,"sources":["components/QuestionList.jsx","Redux/Actions/QuestActions.jsx","components/AddQuestion.jsx","assets/logo.svg","components/Navbar.jsx","components/Footer.jsx","pages/Question.jsx","Redux/Actions/TwitterAction.jsx","Redux/Actions/GameActions.jsx","components/LeaderBoard.jsx","components/TwitterCard.jsx","pages/Home.jsx","components/GuestNavBar.jsx","Redux/Actions/AuthAction.jsx","components/LoginForm.jsx","pages/Login.jsx","components/RegisterForm.jsx","pages/Register.jsx","components/TutorialTable.jsx","Redux/Actions/TutorialAction.jsx","components/AddTutorial.jsx","pages/Tutorial.jsx","pages/Logout.jsx","components/StudentInfo.jsx","components/MarkDropDown.jsx","components/MarkScoreComment.jsx","components/MarkPicture.jsx","pages/Marking.jsx","pages/MarkingHome.jsx","pages/StudentSelect.jsx","pages/StudentMain.jsx","components/Uploadfile.jsx","components/StudentProfileCard.jsx","pages/StudentProfile.jsx","components/ProfProfileCard.jsx","pages/ProfessorProfile.jsx","pages/StudentNews.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/TwitterReducers.jsx","Redux/Reducers/GameReducers.jsx","Redux/Reducers/TutorialReducers.jsx","Redux/Reducers/QuestReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["QuestionList","questions","removeQuestion","striped","map","x","index","question","size","color","onClick","onDelete","questid","addQuestion","postData","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","data","type","payload","showQuestion","AddQuestion","Component","state","UserSubmitQuestion","this","props","addQuest","handleChange","e","setState","target","id","value","render","className","label","icon","group","validate","error","success","onChange","connect","quest","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","cx","cy","r","SvgLogo","_ref","svgRef","title","titleId","xmlns","viewBox","ref","ForwardRef","Navbar","collapseID","username","localStorage","getItem","usertype","toggleCollapse","prevState","closeCollapse","collID","window","scrollTo","dark","expand","fixed","scrolling","href","style","height","width","isOpen","navbar","right","exact","to","nav","caret","Footer","Date","getFullYear","Question","tutid","match","params","getQuestions","form","tutgrp","getTutGrp","tutquestion","toString","post","deleteQuestion","componentDidMount","Fragment","fetchPosts","fetchLeaderboard","Pagination","leaderboard","React","useState","columns","field","attributes","sort","rows","datatable","push","name","date","score","view","hover","entriesOptions","entries","pagesAmount","fullPagination","TwitterCard","src","waves","user","text","id_str","Home","history","twitterPosts","twitter","items","game","records","GuestNavbar","getStudentInfo","updateProfile","facebookAccountLink","LoginForm","email","userpassword","fbid","fblogin","emaillogin","EmailLogin","password","emailLogin","responseFacebook","response","FbLogin","facebookLogin","componentWillReceiveProps","nextProps","setItem","loginstatus","picture","Navigate","alert","delay","outline","md","xl","iconClass","appId","fields","cssClass","callback","auth","login","Login","val","console","log","RegisterForm","cfmpassword","fbimage","fbdetails","url","handleSelectList","Validate","Register","registerUser","registerstatus","alt","textButton","status","TutorialTable","tutorial","navigate","deleteTut","tutname","createdby","ViewTutorial","addTutorial","showTutorials","AddTutorial","tutGroup","tutName","difficulty","coins","onSubmit","addTut","getValue","htmlFor","min","max","tutorialgrp","Tutorial","DelTutorial","deleteTutorial","tutorialtable","Logout","clear","StudentInfo","student","MarkDropDown","MarkScoreComment","record","inputChange","markComplete","placeholder","MarkPicture","image","Marking","submissionid","studid","comment","MarkingComplete","updateScores","getSubmission","getTutorialQuestions","getStudentDetails","getStudentSubmission","questionlist","Proptypes","func","isRequired","submission","studentinfo","scores","MarkingHome","filter","z","StudentSelect","ViewDetails","getStudents","studentlist","students","StudentMain","Uploadfile","file","onChangeHandleFile","files","reader","FileReader","readAsDataURL","addEventListener","result","picUpload","inputs","containerClassName","StudentProfileCard","studname","profilepic","studemail","studtutgrp","StudentProfile","fbDisplay","onChoose","onSubmitAll","PictureUploaded","pic","FbLink","facebookBtn","allTutorials","ProfProfileCard","ProfessorProfile","getProfInfo","profinfo","StudentNews","Routes","path","component","initState","AuthReducers","action","TwitterReducers","GameReducers","TutorialReducers","QuestReducers","RootReducer","combineReducers","middleWare","thunk","store","createStore","applyMiddleware","App","Store","overlay","marginTop","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6fd716b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\n\r\nexport default function QuestionList({ questions, removeQuestion }) {\r\n  let onDelete = (questid) => {\r\n    removeQuestion(questid)\r\n  }\r\n  return (\r\n    <div>\r\n      <MDBTable striped>\r\n        <MDBTableHead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Question</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </MDBTableHead>\r\n        <MDBTableBody>\r\n          {questions && questions.map((x, index) => {\r\n            return (\r\n              <tr key={x.questid}>\r\n                <td>{index + 1}</td>\r\n                <td>{x.question}</td>\r\n                <td><MDBBtn size=\"sm\" color=\"red\" onClick={() => onDelete(x.questid)}>Remove</MDBBtn></td>              \r\n              </tr>\r\n            )\r\n          })}\r\n        </MDBTableBody>\r\n      </MDBTable>\r\n    </div>\r\n  )\r\n}\r\n","export const addQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REMOVE_QUESTION',\r\n            payload: postData.questid\r\n        })\r\n        );\r\n}\r\n\r\nexport const showQuestion = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/show/tutquest', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'SHOW_QUESTION',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React, { Component } from 'react'\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { addQuestion } from '../Redux/Actions/QuestActions'\r\n\r\nclass AddQuestion extends Component {\r\n    state = {\r\n        question: '',\r\n    }\r\n    UserSubmitQuestion = () => {\r\n        //Fire method from parent component [Question.jsx]\r\n        this.props.addQuest(this.state.question);\r\n    }\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput label=\"Enter Question\" id='question' icon=\"question\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.UserSubmitQuestion}>Submit</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    question: state.quest.questions\r\n});\r\n\r\nexport default connect(mapStateToProps, { addQuestion })(AddQuestion)\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  let title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBIcon, MDBDropdownItem } from 'mdbreact';\r\nimport { ReactComponent as Logo } from '../assets/logo.svg';\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"name\"),\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    };\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        if (this.state.usertype == \"Professor\") {\r\n            return (\r\n                <div>\r\n                    <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                        <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                            <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                            <strong className='align-middle'>SSAD Project</strong>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler\r\n                            onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                        />\r\n                        <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        exact\r\n                                        to='/home'\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    >\r\n                                        <strong>Home</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/tutorial'\r\n                                    >\r\n                                        <strong>Tutorial</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/seltut'\r\n                                    >\r\n                                        <strong>Marking</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBDropdown>\r\n                                        <MDBDropdownToggle nav caret>\r\n                                            <MDBIcon icon=\"user\" /> {this.state.username}\r\n                                        </MDBDropdownToggle>\r\n                                        <MDBDropdownMenu className=\"dropdown-default\">\r\n                                            <MDBDropdownItem href=\"/professorprofile\">Profile</MDBDropdownItem>\r\n                                            <MDBDropdownItem href='/logout'>Logout</MDBDropdownItem>\r\n                                        </MDBDropdownMenu>\r\n                                    </MDBDropdown>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                        <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                            <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                            <strong className='align-middle'>SSAD Project</strong>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler\r\n                            onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                        />\r\n                        <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                            <MDBNavbarNav right>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        exact\r\n                                        to='/studentmain'\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    >\r\n                                        <strong>Home</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                        to='/studentnews'\r\n                                    >\r\n                                        <strong>News</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBDropdown>\r\n                                        <MDBDropdownToggle nav caret>\r\n                                            <MDBIcon icon=\"user\" /> {this.state.username}\r\n                                        </MDBDropdownToggle>\r\n                                        <MDBDropdownMenu className=\"dropdown-default\">\r\n                                            <MDBDropdownItem href=\"/studentprofile\">Profile</MDBDropdownItem>\r\n                                            <MDBDropdownItem href='/logout'>Logout</MDBDropdownItem>\r\n                                        </MDBDropdownMenu>\r\n                                    </MDBDropdown>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react'\r\nimport { MDBFooter } from 'mdbreact';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='indigo'>\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='#'> Team Ganyu (NTU Project) </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport QuestionList from '../components/QuestionList'\r\nimport AddQuestion from '../components/AddQuestion';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showQuestion, addQuestion, deleteQuestion } from '../Redux/Actions/QuestActions'\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        tutid: this.props.match.params.id,\r\n    };\r\n    getQuestions = () => {\r\n        const form = {\r\n            tutid: this.state.tutid,\r\n            tutgrp: ''\r\n        }\r\n        this.props.showQuestion(form);\r\n    }\r\n    componentDidMount() {\r\n        this.getQuestions()\r\n    }\r\n    getTutGrp = () => {\r\n        return this.props.tutquestion[0].tutgrp.toString()\r\n    }\r\n    AddQuestion = (question) => {\r\n        const post = {\r\n            question: question,\r\n            tutgrp: this.getTutGrp(),\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.addQuestion(post)\r\n    }\r\n    removeQuestion = (questid) => {\r\n        const form = {\r\n            questid: questid\r\n        }\r\n        this.props.deleteQuestion(form)\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <br />\r\n                            <h2>List of questions</h2>\r\n                            <hr />\r\n                            <QuestionList removeQuestion={this.removeQuestion} questions={this.props.tutquestion} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Add new question</h2>\r\n                            <hr />\r\n                            <AddQuestion addQuest={this.AddQuestion} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nQuestion.propTypes = {\r\n    showQuestion: PropTypes.func.isRequired,\r\n    addQuestion: PropTypes.func.isRequired,\r\n    deleteQuestion: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tutquestion: state.quest.questions,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { showQuestion, addQuestion, deleteQuestion })(Question)","export const fetchPosts = () => dispatch => {\r\n    fetch('https://breadplaza.com/api/public/index.php/api/ntusg')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_POST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n","export const fetchLeaderboard = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/leaderboard')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_LEADERBOARD',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudents = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/tut/student', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_LIST',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudentSubmission = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/student/submission', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_SUBMISSION',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const updateScores = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/marking/update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'UPDATE_SCORES',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from 'react';\r\nimport { MDBDataTableV5, MDBLink, MDBIcon } from 'mdbreact';\r\n\r\nexport default function Pagination({ leaderboard }) {\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: [\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Date submitted',\r\n        field: 'date',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Score',\r\n        field: 'score',\r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'View',\r\n        field: 'view',\r\n        sort: 'disabled',\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n  //console.log(leaderboard)\r\n  leaderboard.map(x => datatable.rows.push({ name: x.name, date: x.date, score: x.score, view: [<MDBLink to={\"/record/\" + x.id}><MDBIcon className=\"red-text\" icon=\"caret-right\" size=\"3x\" className=\"mr-1\" /></MDBLink>] }))\r\n\r\n\r\n  return <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable} fullPagination />;\r\n}","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\n\r\nconst TwitterCard = ({ post }) => {\r\n  return (\r\n    <MDBCol key={post.id_str} size=\"4\">\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src=\"https://download.logo.wine/logo/Nanyang_Technological_University/Nanyang_Technological_University-Logo.wine.png\" waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{post.user.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {post.text}\r\n          </MDBCardText>\r\n          <MDBBtn color=\"green\" href=\"https://twitter.com/NTUsg?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default TwitterCard;\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { fetchLeaderboard } from '../Redux/Actions/GameActions'\r\nimport LeaderBoard from '../components/LeaderBoard'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport TwitterCard from '../components/TwitterCard'\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    }\r\n    componentDidMount() {\r\n        if(this.state.usertype == \"Student\")\r\n            this.props.history.push(\"/studentmain\")\r\n        this.props.fetchLeaderboard();\r\n        this.props.fetchPosts();\r\n    }\r\n    render() {\r\n        let twitterPosts = this.props.twitter.map(x => {\r\n            return (\r\n                <TwitterCard key={x.id_str} post={x} />\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <h2>LeaderBoard</h2>\r\n                    <hr />\r\n                    <LeaderBoard leaderboard={this.props.leaderboard} />\r\n                    <br />\r\n                    <h2>NTU Twitter News</h2>\r\n                    <hr />\r\n                    <MDBRow>\r\n                        {twitterPosts}\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nHome.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    fetchLeaderboard: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n    leaderboard: state.game.records\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchLeaderboard })(Home)\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink } from 'mdbreact';\r\nimport { ReactComponent as Logo } from '../assets/logo.svg';\r\n\r\nclass GuestNavbar extends Component {\r\n    state = {\r\n        collapseID: ''\r\n    };\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        return (\r\n\r\n            <div>\r\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                        <Logo style={{ height: '2.5rem', width: '2.5rem' }} />\r\n                        <strong className='align-middle'>SSAD Project</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/register'\r\n                                >\r\n                                    <strong>Register</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Login</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GuestNavbar","export const emailLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'EMAIL_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const facebookLogin = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/fblogin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FACEBOOK_LOGIN',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const registerUser = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'REGISTER_USER',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const testCall = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/test', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'TESTING',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getStudentInfo = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/studentinfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_STUDENT_DETAILS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const getProfInfo = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/profinfo', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_PROF_DETAILS',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\n\r\nexport const updateProfile = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/profile/update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'UPDATE_PROFILE',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\n\r\nexport const facebookAccountLink = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/facebook/link', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FACEBOOK_ACCOUNT_LINK',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"./css/index.css\";\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { emailLogin, facebookLogin } from '../Redux/Actions/AuthAction'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    email: '',\r\n    userpassword: '',\r\n    fbid: '',\r\n    fblogin: false,\r\n    emaillogin: false\r\n  };\r\n\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  EmailLogin = () => {\r\n    const post = {\r\n      email: this.state.email,\r\n      password: this.state.userpassword\r\n    }\r\n    this.setState({ emaillogin: true })\r\n    this.props.emailLogin(post);\r\n  }\r\n  responseFacebook = (response) => {\r\n    this.setState({\r\n      fbid: response.id,\r\n      fblogin: true\r\n    })\r\n    this.FbLogin(response.id)\r\n  }\r\n  FbLogin = (id) => {\r\n    const post = {\r\n      fbid: id\r\n    }\r\n    this.props.facebookLogin(post);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if(this.state.fblogin){\r\n      localStorage.setItem(\"studid\", nextProps.loginstatus[0].id)\r\n      localStorage.setItem(\"fbid\", nextProps.loginstatus[0].fbid)\r\n      localStorage.setItem(\"name\", nextProps.loginstatus[0].name)\r\n      localStorage.setItem(\"email\", nextProps.loginstatus[0].email)\r\n      localStorage.setItem(\"usertype\", nextProps.loginstatus[0].usertype)\r\n      localStorage.setItem(\"tutgrp\", nextProps.loginstatus[0].tutgrp)\r\n      localStorage.setItem(\"picture\", nextProps.loginstatus[0].picture)\r\n      this.props.Navigate(\"/home\")\r\n    }\r\n    else if (this.state.emaillogin) {\r\n      localStorage.setItem(\"studid\", nextProps.loginstatus[0].id)\r\n      localStorage.setItem(\"fbid\", nextProps.loginstatus[0].fbid)\r\n      localStorage.setItem(\"name\", nextProps.loginstatus[0].name)\r\n      localStorage.setItem(\"email\", nextProps.loginstatus[0].email)\r\n      localStorage.setItem(\"usertype\", nextProps.loginstatus[0].usertype)\r\n      localStorage.setItem(\"tutgrp\", nextProps.loginstatus[0].tutgrp)\r\n      localStorage.setItem(\"picture\", nextProps.loginstatus[0].picture)\r\n      this.props.Navigate(\"/home\")\r\n    }\r\n    else {\r\n      alert(\"Wrong email or password\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Sign up right now!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Don't have an account? Register here!\r\n                  </h6>\r\n                  <MDBNavLink to='/register'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Register\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Login:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"userpassword\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn color=\"white\" onClick={this.EmailLogin}>Login</MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"787349391890029\"\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n\r\n                          <hr className=\"hr-light\" />\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  emailLogin: PropTypes.func.isRequired,\r\n  facebookLogin: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loginstatus: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { emailLogin, facebookLogin })(LoginForm);","import React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport GuestNavbar from '../components/GuestNavBar'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nclass Login extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    componentDidMount() {\r\n        console.log(localStorage.getItem(\"email\"))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <LoginForm Navigate={this.Navigate} />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","import React from \"react\";\r\nimport {\r\n  MDBMask,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBAnimation,\r\n  MDBNavLink\r\n} from \"mdbreact\";\r\nimport \"./css/index.css\";\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport PropTypes from 'prop-types'\r\nimport { registerUser } from '../Redux/Actions/AuthAction'\r\nimport { connect } from 'react-redux'\r\n\r\nclass RegisterForm extends React.Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cfmpassword: \"\",\r\n    usertype: \"Student\",\r\n    name: \"\",\r\n    fbimage: \"\",\r\n    fbid: \"\",\r\n    tutgrp: \"TS1\",\r\n    fbdetails: false\r\n  };\r\n\r\n  toggleCollapse = collapseID => () =>\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }));\r\n\r\n  responseFacebook = (response) => {\r\n    console.log(response)\r\n    this.setState({\r\n      fbid: response.id,\r\n      fbimage: response.picture.data.url,\r\n      email: response.email,\r\n      name: response.name,\r\n      fbdetails: true\r\n    })\r\n  }\r\n  handleSelectList = (e) => {\r\n    this.setState({\r\n      tutgrp: e.target.value\r\n    })\r\n  }\r\n  Validate = () => {\r\n    this.Register();\r\n  }\r\n  Register = () => {\r\n    const form = {\r\n      fbid: this.state.fbid,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      name: this.state.name,\r\n      usertype: \"Student\",\r\n      tutgrp: this.state.tutgrp\r\n    }\r\n    this.props.registerUser(form);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    var response = nextProps.registerstatus[0].response;\r\n    if(response == \"User Registered\"){\r\n      this.props.Navigate(\"/\")\r\n    }\r\n    else{\r\n      //Do some animation here\r\n      alert(\"Register Error\")\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let fbimage = (!this.state.fbdetails) ? <React.Fragment /> : <center> <img width=\"150\" height=\"150\" src={this.state.fbimage} className=\"img-fluid z-depth-1 rounded-circle\" alt=\"\" /></center>\r\n    return (\r\n      <div id=\"classicformpage\">\r\n        <MDBView>\r\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\r\n            <MDBContainer>\r\n              <MDBRow>\r\n                <MDBAnimation\r\n                  type=\"fadeInLeft\"\r\n                  delay=\".3s\"\r\n                  className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\"\r\n                >\r\n                  <h1 className=\"h1-responsive font-weight-bold\">\r\n                    Thank you for joining us!\r\n                  </h1>\r\n                  <hr className=\"hr-light\" />\r\n                  <h6 className=\"mb-4\">\r\n                    Already have an account? Click the button below to go back\r\n                  </h6>\r\n                  <MDBNavLink to='/'>\r\n                    <MDBBtn outline color=\"white\">\r\n                      Login\r\n                  </MDBBtn>\r\n                  </MDBNavLink>\r\n                </MDBAnimation>\r\n\r\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\r\n                  <MDBAnimation type=\"fadeInRight\" delay=\".3s\">\r\n                    <MDBCard id=\"classic-card\">\r\n                      <MDBCardBody className=\"white-text\">\r\n                        <h3 className=\"text-center\">\r\n                          <MDBIcon icon=\"user\" /> Register:\r\n                        </h3>\r\n                        <hr className=\"hr-light\" />\r\n                        {fbimage}\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Full Name\"\r\n                          icon=\"address-card\"\r\n                          id=\"name\"\r\n                          type=\"text\"\r\n                          value={this.state.name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Email\"\r\n                          icon=\"envelope\"\r\n                          id=\"email\"\r\n                          type=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Enter Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <MDBInput\r\n                          className=\"white-text\"\r\n                          iconClass=\"white-text\"\r\n                          label=\"Confirm Password\"\r\n                          icon=\"lock\"\r\n                          type=\"password\"\r\n                          id=\"cfmpassword\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <select onChange={this.handleSelectList} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                          <option value={'TS1'}>TS1</option>\r\n                          <option value={'TS2'}>TS2</option>\r\n                          <option value={'TS3'}>TS3</option>\r\n                          <option value={'TS4'}>TS4</option>\r\n                        </select>\r\n                        <div className=\"text-center mt-4 black-text\">\r\n                          <MDBBtn onClick={this.Validate} color=\"white\">Register</MDBBtn>\r\n                          <FacebookLogin\r\n                            appId=\"787349391890029\"\r\n                            fields=\"name,email,picture\"\r\n                            cssClass=\"btn btn-outline white\"\r\n                            textButton=\"Facebook Register\"\r\n                            callback={this.responseFacebook}\r\n                          />\r\n                        </div>\r\n                      </MDBCardBody>\r\n                    </MDBCard>\r\n                  </MDBAnimation>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBContainer>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  registerstatus: state.auth.status\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(RegisterForm);","import React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport GuestNavbar from '../components/GuestNavBar'\r\nimport RegisterForm from '../components/RegisterForm'\r\n\r\nclass Register extends Component {\r\n    Navigate = (val) => {\r\n        this.props.history.push(val)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <RegisterForm Navigate={this.Navigate} />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register","import React, { useEffect, useState } from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBLink } from 'mdbreact';\r\n\r\nconst TutorialTable = ({ tutorial, navigate, deleteTut }) => {\r\n  let onDelete = (tutid) => {\r\n    deleteTut(tutid)\r\n  }\r\n  let ViewTutorial = (tutid) => {\r\n    navigate(tutid)\r\n  }\r\n  return (\r\n    <MDBTable striped>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Tutorial Name</th>\r\n          <th>Tutorial Group</th>\r\n          <th>Created by</th>\r\n          <th>Remove</th>\r\n          <th>View</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {tutorial && tutorial.map(x => {\r\n          return (\r\n            <tr key={x.tutid}>\r\n              <td>{x.tutname}</td>\r\n              <td>{x.tutgrp}</td>\r\n              <td>{x.createdby}</td>\r\n              <td><MDBBtn size=\"sm\" color=\"red\" onClick={() => onDelete(x.tutid)}>Remove</MDBBtn></td>\r\n              <td><MDBBtn size=\"sm\" color=\"blue\" onClick={() => ViewTutorial(x.tutid)}> View </MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default TutorialTable;","export const addTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/add/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'ADD_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}\r\nexport const deleteTutorial = (postData) => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/delete/tutorial', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'DELETE_TUTORIAL',\r\n            payload: data,\r\n            tutid: postData.tutid\r\n        })\r\n        );\r\n}\r\nexport const showTutorials = () => dispatch => {\r\n    fetch('https://ssadapi.hyunatic.com/public/index.php/api/tutlist')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'FETCH_TUTORIAL',\r\n            payload: data\r\n        })\r\n        );\r\n}","import React, { Component } from 'react'\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { addTutorial } from '../Redux/Actions/TutorialAction'\r\n\r\nclass AddTutorial extends Component {\r\n    state = {\r\n        tutGroup: '',\r\n        tutName: '',\r\n        createdby: localStorage.getItem(\"name\"),\r\n        difficulty: 'Easy',\r\n        coins: 50\r\n    }\r\n    onSubmit = () => {\r\n        const post = {\r\n            tutname: this.state.tutName,\r\n            tutgrp: this.state.tutGroup,\r\n            createdby: this.state.createdby,\r\n            difficulty: this.state.difficulty,\r\n            coins: this.state.coins\r\n        }\r\n        this.props.addTut(post);\r\n    }\r\n    handleChange = (e) => { //to handle change in inputs\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    getValue = (e) => {\r\n        this.setState({\r\n            coins: e.target.value\r\n        })\r\n    }\r\n    handleSelectList = (e) => {\r\n        this.setState({difficulty: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput label=\"Enter Tutorial Group\" id='tutGroup' onChange={this.handleChange} icon=\"user-plus\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                        <MDBInput label=\"Enter Tutorial Name\" id='tutName' onChange={this.handleChange} icon=\"user-alt\" group type=\"email\" validate error=\"wrong\"\r\n                            success=\"right\" />\r\n                    </div>\r\n                    <label htmlFor=\"difficulty\">Difficulty Level</label>\r\n                    <select onChange={this.handleSelectList} value={this.state.difficulty} id=\"diffuculty\" className=\"browser-default custom-select\">\r\n                        <option value={'Easy'}>Easy</option>\r\n                        <option value={'Medium'}>Medium</option>\r\n                        <option value={'Hard'}>Hard</option>\r\n                    </select>\r\n                    <br/><br/>\r\n                    <label htmlFor=\"coins\">Number of coins: {this.state.coins}</label>\r\n                    <input type=\"range\" id=\"coins\" onChange={this.getValue} min=\"0\" max=\"100\" className=\"custom-range\" />\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn onClick={this.onSubmit}>Submit</MDBBtn>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    tutGroup: state.tutorial.tutorialgrp \r\n});\r\n\r\nexport default connect(mapStateToProps, { addTutorial })(AddTutorial) //to be changed","\r\nimport React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport TutorialTable from '../components/TutorialTable'\r\nimport AddTutorial from '../components/AddTutorial'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { showTutorials, deleteTutorial, addTutorial } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nclass Tutorial extends Component {\r\n    componentDidMount() {\r\n        this.props.showTutorials();\r\n    }\r\n    Navigate = (tutid) => {\r\n        this.props.history.push('/question/' + tutid)\r\n    }\r\n    DelTutorial = (tutid) => {\r\n        const form = {\r\n            tutid: tutid\r\n        }\r\n        this.props.deleteTutorial(form)\r\n    }\r\n    AddTutorial = (form) => {\r\n        //Submit data to my api\r\n        this.props.addTutorial(form);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n                            <h2>Tutorial Grouping</h2>\r\n                            <TutorialTable deleteTut={this.DelTutorial} navigate={this.Navigate} tutorial={this.props.tutorialtable} />\r\n                            <br />\r\n                            <h3>Add New Tutorial Grouping</h3>\r\n                            <AddTutorial addTut={this.AddTutorial} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nTutorial.propTypes = {\r\n    showTutorials: PropTypes.func.isRequired,\r\n    deleteTutorial: PropTypes.func.isRequired,\r\n    addTutorial: PropTypes.func.isRequired\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    tutorialtable: state.tutorial.tutorialgrp,\r\n});\r\n\r\n// connection this component to database.\r\nexport default connect(mapStateToProps, { showTutorials, deleteTutorial, addTutorial })(Tutorial)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst StudentInfo = ({ student }) => {\r\n  return (\r\n    <div>\r\n      {student && student.map(x => {\r\n        return (\r\n          <MDBCard key={x.id} style={{ width: \"22rem\" }}>\r\n            <MDBCardImage className=\"img-fluid\" src={x.picture} waves />\r\n            <MDBCardBody>\r\n              <MDBCardTitle>{x.name}</MDBCardTitle>\r\n              <MDBCardText>\r\n                Email: {x.email} <br />\r\n                Tutorial Group: {x.tutgrp}\r\n              </MDBCardText>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentInfo;","import React from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBContainer } from \"mdbreact\";\r\n\r\nconst MarkDropDown = ({ questions }) => {\r\n  return (\r\n    <MDBListGroup style={{ width: \"22rem\" }}>\r\n      {questions.map((x, index) => {\r\n        return (\r\n          <MDBListGroupItem key={x.questid} href=\"#\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n              <h5 className=\"mb-1\">Question #{index + 1}</h5>\r\n            </div>\r\n            <p className=\"mb-1\">{x.question}</p>\r\n          </MDBListGroupItem>\r\n        )\r\n      })}\r\n    </MDBListGroup>\r\n  );\r\n};\r\n\r\nexport default MarkDropDown;","import React from \"react\";\r\nimport { MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst MarkScoreComment = ({ record, inputChange, markComplete }) => {\r\n  return (\r\n    <div>\r\n      {record.map(x => {\r\n        return (\r\n          <form key={x.id}>\r\n            <div className=\"grey-text\">\r\n              <MDBInput label=\"Score\" placeholder=\"Enter Score\" id=\"score\" onChange={inputChange} className=\"w-100\" icon=\"star\" group type=\"email\" validate error=\"wrong\"\r\n                success=\"right\" />\r\n              <MDBInput label=\"Comment\" placeholder=\"Enter Comments\" id=\"comment\" onChange={inputChange} className=\"w-100\" icon=\"comment\" group type=\"email\" validate error=\"wrong\"\r\n                success=\"right\" />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn color=\"blue\" onClick={markComplete}>Submit</MDBBtn>\r\n            </div>\r\n          </form>\r\n        )\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkScoreComment;","import React from 'react';\r\n\r\nimport { MDBRow, MDBCol, MDBContainer } from \"mdbreact\";\r\n\r\nconst MarkPicture = ({ record }) => {\r\n  return (\r\n    <div>\r\n      {record.map(x => {\r\n        return (\r\n          <MDBRow key={x.id}>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n              <img src={x.image} className=\"img-fluid z-depth-1\" alt=\"\" />\r\n            </MDBCol>\r\n          </MDBRow>\r\n        )\r\n      })\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MarkPicture;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentSubmission, updateScores } from '../Redux/Actions/GameActions'\r\nimport { showQuestion } from '../Redux/Actions/QuestActions'\r\nimport { getStudentInfo } from '../Redux/Actions/AuthAction'\r\nimport StudentInfo from '../components/StudentInfo';\r\nimport MarkDropDown from '../components/MarkDropDown';\r\nimport MarkScoreComment from '../components/MarkScoreComment';\r\nimport MarkPicture from '../components/MarkPicture'\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\n\r\nclass Marking extends Component {\r\n    state = {\r\n        submissionid: this.props.match.params.id,\r\n        tutid: localStorage.getItem(\"selectedtutid\"),\r\n        studid: this.props.match.params.studid,\r\n        score: '',\r\n        comment: ''\r\n    }\r\n    componentDidMount() {\r\n        this.getSubmission();\r\n        this.getTutorialQuestions();\r\n        this.getStudentDetails();\r\n        console.log(this.props);\r\n    }\r\n    getSubmission() {\r\n        const form = {\r\n            id: this.state.submissionid,\r\n        }\r\n        this.props.getStudentSubmission(form)\r\n    }\r\n    getTutorialQuestions() {\r\n        const form = {\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.showQuestion(form)\r\n    }\r\n    getStudentDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    MarkingComplete = () => {\r\n        const form = {\r\n            id: this.state.submissionid,\r\n            score: this.state.score,\r\n            comment: this.state.comment\r\n        }\r\n        this.props.updateScores(form)\r\n        this.props.history.push(\"/seltut\")\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol size=\"6\">\r\n                            <h2>Student Details</h2>\r\n                            <hr />\r\n                            <StudentInfo student={this.props.student} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <h2>Students Answer</h2>\r\n                            <hr />\r\n                            <MarkPicture record={this.props.record} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <br></br>\r\n                            <h2>Question List</h2>\r\n                            <MarkDropDown questions={this.props.questionlist} />\r\n                        </MDBCol>\r\n                        <MDBCol size=\"6\">\r\n                            <br />\r\n                            <h2>Marking</h2>\r\n                            <MarkScoreComment markComplete={this.MarkingComplete} inputChange={this.handleChange} record={this.props.record} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nMarking.Proptypes = {\r\n    getStudentSubmission: Proptypes.func.isRequired,\r\n    showQuestion: Proptypes.func.isRequired,\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    updateScores: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    record: state.game.submission,\r\n    questionlist: state.quest.questions,\r\n    student: state.auth.studentinfo,\r\n    scores: state.game.status\r\n})\r\nexport default connect(mapStateToProps, { getStudentSubmission, showQuestion, getStudentInfo, updateScores })(Marking)","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\nimport { showTutorials } from '../Redux/Actions/TutorialAction'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nclass MarkingHome extends Component {\r\n    componentDidMount() {\r\n        this.props.showTutorials();\r\n    }\r\n    ViewTutorial = (tutid) => {\r\n        var tutgrp = this.props.tutorialtable.filter(x => x.tutid == tutid).map(z => z.tutgrp)\r\n        localStorage.setItem(\"seltutgrp\", tutgrp)\r\n        localStorage.setItem(\"selectedtutid\", tutid)\r\n        this.props.history.push('/student/' + tutid)\r\n    }\r\n    render() {\r\n        let tutorialgrp = this.props.tutorialtable.map(x => {\r\n            return (\r\n                <tr key={x.tutid}>\r\n                    <td>{x.tutname}</td>\r\n                    <td>{x.tutgrp}</td>\r\n                    <td>{x.createdby}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.ViewTutorial(x.tutid)}> Select </MDBBtn></td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Select Tutorial Group to Mark</h2>\r\n                            <hr />\r\n                            <MDBTable striped>\r\n                                <MDBTableHead>\r\n                                    <tr>\r\n                                        <th>Tutorial Name</th>\r\n                                        <th>Tutorial Group</th>\r\n                                        <th>Created by</th>\r\n                                        <th>Select</th>\r\n                                    </tr>\r\n                                </MDBTableHead>\r\n                                <MDBTableBody>\r\n                                    {tutorialgrp}\r\n                                </MDBTableBody>\r\n                            </MDBTable>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nMarkingHome.propTypes = {\r\n    showTutorials: PropTypes.func.isRequired,\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    tutorialtable: state.tutorial.tutorialgrp,\r\n});\r\n\r\nexport default connect(mapStateToProps, { showTutorials })(MarkingHome)","import React, { Component } from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getStudents } from '../Redux/Actions/GameActions'\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nclass StudentSelect extends Component {\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"seltutgrp\"),\r\n        tutid: this.props.match.params.tutid\r\n    }\r\n    componentDidMount() {\r\n        this.getStudents()\r\n    }\r\n    getStudents() {\r\n        const form = {\r\n            tutid: this.state.tutid\r\n        }\r\n        this.props.getStudents(form)\r\n    }\r\n    ViewDetails = (submissionid, studid) => {\r\n        this.props.history.push('/marking/' + submissionid + \"/\" + studid)\r\n    }\r\n    render() {\r\n        let studentlist = this.props.students.map(x => {\r\n            return (\r\n                <tr key={x.id}>\r\n                    <td>{x.name}</td>\r\n                    <td>{x.date}</td>\r\n                    <td>{x.tutgrp}</td>\r\n                    <td><MDBBtn size=\"sm\" color=\"green\" onClick={() => this.ViewDetails(x.id, x.studid)}> Select </MDBBtn></td>\r\n                </tr>\r\n            );\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Select Student to Mark from Group: {this.state.tutgrp}</h2>\r\n                            <hr />\r\n                            <MDBTable striped>\r\n                                <MDBTableHead>\r\n                                    <tr>\r\n                                        <th>Student Name</th>\r\n                                        <th>Date Submitted</th>\r\n                                        <th>Tutorial Group</th>\r\n                                        <th>Select</th>\r\n                                    </tr>\r\n                                </MDBTableHead>\r\n                                <MDBTableBody>\r\n                                    {studentlist}\r\n                                </MDBTableBody>\r\n                            </MDBTable>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nStudentSelect.propTypes = {\r\n    getStudents: PropTypes.func.isRequired,\r\n}\r\n\r\n//This is from the Reducers\r\n//state.Rootreducer.TutorialReducers\r\nconst mapStateToProps = state => ({\r\n    students: state.game.studentlist,\r\n});\r\nexport default connect(mapStateToProps, { getStudents })(StudentSelect)","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\"\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { fetchLeaderboard } from '../Redux/Actions/GameActions'\r\nimport LeaderBoard from '../components/LeaderBoard'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\n\r\n\r\nclass StudentMain extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchLeaderboard();\r\n        this.props.fetchPosts();\r\n        console.log(localStorage.getItem(\"email\"));\r\n        //console.log(this.props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n                    <h2>LeaderBoard</h2>\r\n                    <hr />\r\n                    <LeaderBoard leaderboard={this.props.leaderboard} />\r\n                    <br />\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStudentMain.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    fetchLeaderboard: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n    leaderboard: state.game.records\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchLeaderboard })(StudentMain)\r\n","import React, { Component } from 'react'\r\nimport { MDBInputGroup, MDBBtn } from 'mdbreact';\r\n\r\nexport default class Uploadfile extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            file: []\r\n        }\r\n    }\r\n\r\n    onChangeHandleFile = (e) => {\r\n        console.log(e.target.files[0])\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n                this.setState(state => ({\r\n                    ...state,\r\n                    form: {\r\n                        file: [reader.result]\r\n                    }\r\n                }));\r\n                const url = reader.result;\r\n                //console.log(\"#####\", url);\r\n                //Call Parent Component Method\r\n                this.props.picUpload(url)\r\n            },\r\n            false\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBInputGroup id='file'\r\n                inputs={\r\n                    <div className=\"custom-file\">\r\n                        <input onChange={this.onChangeHandleFile}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                            Choose file\r\n                        </label>\r\n                    </div>\r\n                }\r\n                containerClassName=\"mb-3\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst StudentProfileCard = ({ studname, profilepic, studemail, studtutgrp }) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profilepic} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{studname}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {studemail} <br />\r\n                Tutorial Group: {studtutgrp}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentProfileCard;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBInputGroup } from \"mdbreact\"\r\nimport Uploadfile from '../components/Uploadfile'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getStudentInfo, updateProfile, facebookAccountLink } from '../Redux/Actions/AuthAction'\r\nimport { showTutorials } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport StudentProfileCard from '../components/StudentProfileCard'\r\n\r\nclass StudentProfile extends Component {\r\n\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        email: localStorage.getItem(\"email\"),\r\n        picture: localStorage.getItem(\"picture\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        fbid: localStorage.getItem(\"fbid\"),\r\n        fbDisplay: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.fbid == '') {\r\n            this.setState({ fbDisplay: true })\r\n        }\r\n        this.getStudentDetails();\r\n        this.props.showTutorials();\r\n    }\r\n\r\n    getStudentDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getStudentInfo(form)\r\n    }\r\n\r\n    onChoose = (e) => {\r\n        this.setState({\r\n            tutgrp: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitAll = () => {\r\n        const form = {\r\n            id: this.state.studid,\r\n            name: this.state.name,\r\n            fbid: this.state.fbid,\r\n            email: this.state.email,\r\n            picture: this.state.picture,\r\n            tutgrp: this.state.tutgrp\r\n        }\r\n        this.props.updateProfile(form);\r\n        localStorage.setItem(\"picture\", this.state.picture)\r\n        localStorage.setItem(\"tutgrp\", this.state.tutgrp)\r\n        localStorage.setItem(\"email\", this.state.email)\r\n        localStorage.setItem(\"name\", this.state.name)\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        this.props.history.push(\"/home\")\r\n    }\r\n\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    PictureUploaded = (pic) => {\r\n        console.log(pic)\r\n        this.setState({ picture: pic });\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        this.setState({\r\n            fbid: response.id,\r\n            fblogin: true\r\n        })\r\n        this.FbLink(response.id)\r\n    }\r\n    FbLink = (id) => {\r\n        this.setState({\r\n            fbid: id,\r\n            fbDisplay: false\r\n        })\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        const form = {\r\n            id: this.state.studid,\r\n            fbid: this.state.fbid\r\n        }\r\n        this.props.facebookAccountLink(form)\r\n    }\r\n\r\n    render() {\r\n        let facebookBtn = (this.state.fbDisplay) ? <FacebookLogin appId=\"787349391890029\"\r\n            textButton=\"Link with Facebook\"\r\n            fields=\"name,email,picture\"\r\n            cssClass=\"btn btn-sm blue white-text\"\r\n            callback={this.responseFacebook}\r\n        /> : <React.Fragment> You have successfully linked your account with facebook </React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"5\">\r\n                            <div>\r\n                                <h3>Live Preview</h3>\r\n                                <hr />\r\n                                {/* The pic will take very long to load */}\r\n                                <StudentProfileCard profilepic={this.state.picture} studname={this.state.name} studemail={this.state.email} studtutgrp={this.state.tutgrp} />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol size=\"7\">\r\n                            <h3>Update Profile</h3>\r\n                            <hr />\r\n                            <MDBInput id='name' value={this.state.name} label=\"Full Name\" icon=\"user\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <MDBInput id='email' value={this.state.email} label=\"E-mail address\" icon=\"envelope\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <Uploadfile picUpload={this.PictureUploaded} />\r\n                            <select onChange={this.onChoose} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                                <option value={'TS1'}>TS1</option>\r\n                                <option value={'TS2'}>TS2</option>\r\n                                <option value={'TS3'}>TS3</option>\r\n                                <option value={'TS4'}>TS4</option>\r\n                            </select>\r\n                            <br /> <br />\r\n                            {facebookBtn}\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.onSubmitAll}\r\n                                color=\"blue\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Update Profile\r\n                            </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nStudentProfile.Proptypes = {\r\n    getStudentInfo: Proptypes.func.isRequired,\r\n    showTutorials: Proptypes.func.isRequired,\r\n    facebookAccountLink: Proptypes.func.isRequired,\r\n    updateProfile: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.studentinfo,\r\n    allTutorials: state.tutorial.tutorialgrp,\r\n\r\n})\r\nexport default connect(mapStateToProps, { getStudentInfo, showTutorials, updateProfile, facebookAccountLink })(StudentProfile)\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst ProfProfileCard = ({ studname, profilepic, studemail, studtutgrp }) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profilepic} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{studname}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {studemail} <br />\r\n                Tutorial Group: {studtutgrp}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfProfileCard;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBInputGroup } from \"mdbreact\"\r\nimport Uploadfile from '../components/Uploadfile'\r\nimport StudentInfo from '../components/StudentInfo'\r\nimport { connect } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\nimport { getProfInfo, updateProfile, facebookAccountLink } from '../Redux/Actions/AuthAction'\r\nimport { showTutorials } from '../Redux/Actions/TutorialAction'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport ProfProfileCard from '../components/ProfProfileCard'\r\n\r\nclass ProfessorProfile extends Component {\r\n\r\n    state = {\r\n        tutgrp: localStorage.getItem(\"tutgrp\"),\r\n        studid: localStorage.getItem(\"studid\"),\r\n        email: localStorage.getItem(\"email\"),\r\n        picture: localStorage.getItem(\"picture\"),\r\n        name: localStorage.getItem(\"name\"),\r\n        fbid: localStorage.getItem(\"fbid\"),\r\n        fbDisplay: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.fbid == '') {\r\n            this.setState({ fbDisplay: true })\r\n        }\r\n        this.getStudentDetails();\r\n        this.props.showTutorials();\r\n    }\r\n\r\n    getStudentDetails() {\r\n        const form = {\r\n            id: this.state.studid\r\n        }\r\n        this.props.getProfInfo(form)\r\n    }\r\n\r\n    onChoose = (e) => {\r\n        this.setState({\r\n            tutgrp: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitAll = () => {\r\n        const form = {\r\n            id: this.state.studid,\r\n            name: this.state.name,\r\n            fbid: this.state.fbid,\r\n            email: this.state.email,\r\n            picture: this.state.picture,\r\n            tutgrp: this.state.tutgrp\r\n        }\r\n        this.props.updateProfile(form);\r\n        localStorage.setItem(\"picture\", this.state.picture)\r\n        localStorage.setItem(\"tutgrp\", this.state.tutgrp)\r\n        localStorage.setItem(\"email\", this.state.email)\r\n        localStorage.setItem(\"name\", this.state.name)\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        this.props.history.push(\"/home\")\r\n    }\r\n\r\n    handleChange = (e) => { // to change state everytime you type -- question: value\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n    PictureUploaded = (pic) => {\r\n        console.log(pic)\r\n        this.setState({ picture: pic });\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        this.setState({\r\n            fbid: response.id,\r\n            fblogin: true\r\n        })\r\n        this.FbLink(response.id)\r\n    }\r\n    FbLink = (id) => {\r\n        this.setState({\r\n            fbid: id,\r\n            fbDisplay: false\r\n        })\r\n        localStorage.setItem(\"fbid\", this.state.fbid)\r\n        const form = {\r\n            id: this.state.studid,\r\n            fbid: this.state.fbid\r\n        }\r\n        this.props.facebookAccountLink(form)\r\n    }\r\n\r\n    render() {\r\n        let facebookBtn = (this.state.fbDisplay) ? <FacebookLogin appId=\"787349391890029\"\r\n            textButton=\"Link with Facebook\"\r\n            fields=\"name,email,picture\"\r\n            cssClass=\"btn btn-sm blue white-text\"\r\n            callback={this.responseFacebook}\r\n        /> : <React.Fragment> You have successfully linked your account with facebook </React.Fragment>\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"5\">\r\n                            <div>\r\n                                <h3>Live Preview</h3>\r\n                                <hr />\r\n                                {/* The pic will take very long to load */}\r\n                                <ProfProfileCard profilepic={this.state.picture} studname={this.state.name} studemail={this.state.email} studtutgrp={this.state.tutgrp} />\r\n                            </div>\r\n                        </MDBCol>\r\n                        <MDBCol size=\"7\">\r\n                            <h3>Update Profile</h3>\r\n                            <hr />\r\n                            <MDBInput id='name' value={this.state.name} label=\"Full Name\" icon=\"user\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <MDBInput id='email' value={this.state.email} label=\"E-mail address\" icon=\"envelope\" onChange={this.handleChange} >\r\n                            </MDBInput>\r\n                            <Uploadfile picUpload={this.PictureUploaded} />\r\n                            <select onChange={this.onChoose} value={this.state.tutgrp} id=\"tutgrp\" className=\"browser-default custom-select\">\r\n                                <option value={'TS1'}>TS1</option>\r\n                                <option value={'TS2'}>TS2</option>\r\n                                <option value={'TS3'}>TS3</option>\r\n                                <option value={'TS4'}>TS4</option>\r\n                            </select>\r\n                            <br /> <br />\r\n                            {facebookBtn}\r\n                            <br />\r\n                            <MDBBtn\r\n                                onClick={this.onSubmitAll}\r\n                                color=\"blue\"\r\n                                className=\"m-0 px-3 py-2 z-depth-0\">\r\n                                Update Profile\r\n                            </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nProfessorProfile.Proptypes = {\r\n    getProfInfo: Proptypes.func.isRequired,\r\n    showTutorials: Proptypes.func.isRequired,\r\n    facebookAccountLink: Proptypes.func.isRequired,\r\n    updateProfile: Proptypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    student: state.auth.profinfo,\r\n    allTutorials: state.tutorial.tutorialgrp,\r\n\r\n})\r\nexport default connect(mapStateToProps, { getProfInfo, showTutorials, updateProfile, facebookAccountLink })(ProfessorProfile)\r\n","import React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPosts } from '../Redux/Actions/TwitterAction'\r\nimport { connect } from 'react-redux'\r\nimport { MDBContainer, MDBRow } from \"mdbreact\"\r\nimport TwitterCard from '../components/TwitterCard'\r\n\r\nclass StudentNews extends Component {\r\n    state = {\r\n        usertype: localStorage.getItem(\"usertype\")\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.usertype == \"Professor\")\r\n            this.props.history.push(\"/home\")\r\n        this.props.fetchPosts();\r\n    }\r\n    render() {\r\n        let twitterPosts = this.props.twitter.map(x => {\r\n            return (\r\n                <TwitterCard key={x.id_str} post={x} />\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br/>\r\n                    <h2>NTU Twitter News</h2>\r\n                    <hr />\r\n                    <MDBRow>\r\n                        {twitterPosts}\r\n                    </MDBRow>\r\n                    <br/>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nStudentNews.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    twitter: state.twitter.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(StudentNews)\r\n","import React from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\n\r\nimport Question from '../pages/Question';\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Tutorial from '../pages/Tutorial';\r\nimport Logout from '../pages/Logout';\r\nimport Marking from '../pages/Marking';\r\nimport MarkingHome from '../pages/MarkingHome';\r\nimport StudentSelect from '../pages/StudentSelect';\r\nimport StudentMain from '../pages/StudentMain';\r\nimport StudentProfile from '../pages/StudentProfile';\r\nimport ProfessorProfile from '../pages/ProfessorProfile';\r\nimport StudentNews from '../pages/StudentNews';\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Login} />\r\n        <Route path='/home' component={Home} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/question/:id' component={Question} />\r\n        <Route path='/tutorial' component={Tutorial} />\r\n        <Route path='/seltut' component={MarkingHome} />\r\n        <Route path='/student/:tutid' component={StudentSelect} />\r\n        <Route path='/marking/:id/:studid' component={Marking} />\r\n        <Route path='/logout' component={Logout} />\r\n        <Route path='/studentmain' component={StudentMain} />\r\n        <Route path='/studentprofile' component={StudentProfile} />\r\n        <Route path='/professorprofile' component={ProfessorProfile} />\r\n        <Route path='/studentnews' component={StudentNews} />\r\n        <Route\r\n          render={() => <h1>Not Found</h1>}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n    login: [],\r\n    status: [],\r\n    studentinfo: [],\r\n    profinfo:[]\r\n};\r\n\r\nconst AuthReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FACEBOOK_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'EMAIL_LOGIN':\r\n            return {\r\n                ...state,\r\n                login: action.payload\r\n            }\r\n        case 'REGISTER_USER':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'TESTING':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'GET_STUDENT_DETAILS':\r\n            return {\r\n                ...state,\r\n                studentinfo: action.payload\r\n            }\r\n        case 'GET_PROF_DETAILS':\r\n            return {\r\n                ...state,\r\n                profinfo: action.payload\r\n            }\r\n        case 'UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'FACEBOOK_ACCOUNT_LINK':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AuthReducers;\r\n","const initState = {\r\n    items: [],\r\n};\r\n\r\nconst TwitterReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_POST':\r\n            return{\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TwitterReducers;\r\n","const initState = {\r\n    records: [],\r\n    studentlist: [],\r\n    submission: [],\r\n    status: []\r\n};\r\n\r\nconst GameReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_LEADERBOARD':\r\n            return {\r\n                ...state,\r\n                records: action.payload\r\n            }\r\n        case 'GET_STUDENT_LIST':\r\n            return {\r\n                ...state,\r\n                studentlist: action.payload\r\n            }\r\n        case 'GET_STUDENT_SUBMISSION':\r\n            return {\r\n                ...state,\r\n                submission: action.payload\r\n            }\r\n        case 'UPDATE_SCORES':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default GameReducers;\r\n","const initState = {\r\n    tutorialgrp: [],\r\n};\r\n\r\nconst TutorialReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: [...state.tutorialgrp, ...action.payload]\r\n            }\r\n        case 'DELETE_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: state.tutorialgrp.filter(x => x.tutid !== action.tutid)\r\n            }\r\n        case 'FETCH_TUTORIAL':\r\n            return {\r\n                ...state,\r\n                tutorialgrp: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TutorialReducers;\r\n","const initState = {\r\n    questions: []\r\n};\r\n\r\nconst QuestReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_QUESTION':\r\n            return {\r\n                ...state,\r\n                questions: action.payload\r\n            }\r\n        case 'REMOVE_QUESTION':\r\n            return {\r\n                ...state,\r\n                questions: state.questions.filter(x => x.questid !== action.payload)\r\n            }\r\n        case 'ADD_QUESTION':\r\n            return {\r\n                ...state,\r\n                questions: [...state.questions, ...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default QuestReducers;\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducers from './AuthReducers';\r\nimport TwitterReducers from './TwitterReducers'\r\nimport GameReducers from './GameReducers'\r\nimport TutorialReducers from './TutorialReducers';\r\nimport QuestReducers from './QuestReducers';\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n    twitter: TwitterReducers,\r\n    auth: AuthReducers,\r\n    game: GameReducers,\r\n    tutorial: TutorialReducers,\r\n    quest: QuestReducers\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n  render() {\r\n\r\n    const { collapseID } = this.state;\r\n    return (\r\n      <Provider store={Store}>\r\n        <Router>\r\n          <div className='flyout'>\r\n            {collapseID && overlay}\r\n            <main style={{ marginTop: '4rem' }}>\r\n              <Routes />\r\n            </main>  \r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}